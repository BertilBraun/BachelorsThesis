# Build and test the tool, if successfully create a pre-release with corresponding binary and push it to dockerhub

name: build

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]
        cbmc-version: [5.79.0]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 8.0.312+7
    - name: Install cbmc (linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        curl https://github.com/diffblue/cbmc/releases/download/cbmc-${{ matrix.cbmc-version}}/ubuntu-22.04-cbmc-${{ matrix.cbmc-version}}-Linux.deb -o cbmc.deb -L
        sudo apt install ./cbmc.deb
    - name: Install cbmc (windows)
      if: matrix.os == 'windows-latest'
      run: |
        curl -L -o cbmc.msi https://github.com/diffblue/cbmc/releases/download/cbmc-${{ matrix.cbmc-version}}/cbmc-${{ matrix.cbmc-version}}-win64.msi
        msiexec /i cbmc.msi /qn /norestart /log log.txt 
        echo "C:\Program Files\cbmc\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install cbmc (mac)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cbmc
    - name: run tests (windows)
      if: matrix.os == 'windows-latest'
      run: |
          gradle testJar
          java -jar JJBMC-test.jar
    - name: run tests (unix)
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      id: build
      run: |
          gradle build
    - name: run sample (windows)
      if: matrix.os == 'windows-latest'
      run: |
        gradle fatJar
        java -jar JJBMC.jar .\testRes\CaseStudy\BubbleSort.java -u 6 -t 30000
    - name: run sample (unix)
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: |
        gradle fatJar
        java -jar JJBMC.jar ./testRes/CaseStudy/BubbleSort.java -u 6 -t 30000
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 8.0.312+7
      - name: "Build jar"
        run: gradle fatJar
      - name: "Create release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            JJBMC.jar
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: jonasklamroth/jjbmc:latest
      
