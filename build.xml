<?xml version="1.0" encoding="UTF-8"?>
<project name="openjmltobmc" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <property name="skip.tests" value="true"/>

  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->

  
  
  <!-- Project Libraries -->
  
  <path id="library.jmlruntime.classpath">
    <pathelement location="${basedir}/lib/jmlruntime.jar"/>
    <pathelement location="${basedir}/lib/openjml.jar"/>
  </path>
  
  <path id="library.picocli-3.9.1.classpath">
    <pathelement location="${basedir}/lib/picocli-3.9.1.jar"/>
  </path>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_jmlbmc.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.jmlbmc" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.jmlbmc" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.jmlbmc:jar" value="${basedir}/out/artifacts/jmlbmc_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.jmlbmc.jar" value="${artifacts.temp.dir}/jmlbmc.jar"/>
  </target>
  
  <target name="artifact.jmlbmc:jar" depends="init.artifacts, compile.module.jmlbmc" description="Build &#39;jmlbmc:jar&#39; artifact">
    <property name="artifact.temp.output.jmlbmc:jar" value="${artifacts.temp.dir}/jmlbmc_jar"/>
    <mkdir dir="${artifact.temp.output.jmlbmc:jar}"/>
    <jar destfile="${temp.jar.path.jmlbmc.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${jmlbmc.output.dir}"/>
      <zipfileset dir="${basedir}/resources"/>
      <zipfileset src="${basedir}/lib/junit-4.12.jar"/>
      <zipfileset src="${basedir}/lib/hamcrest-core-1.3.jar"/>
      <zipfileset src="${basedir}/lib/picocli-3.9.1.jar"/>
      <zipfileset src="${basedir}/lib/jmlruntime.jar"/>
      <zipfileset src="${basedir}/lib/openjml.jar"/>
      <manifest>
        <attribute name="Main-Class" value="Main"/>
      </manifest>
    </jar>
    <copy file="${temp.jar.path.jmlbmc.jar}" tofile="${artifact.temp.output.jmlbmc:jar}/jmlbmc.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.jmlbmc:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.jmlbmc:jar}"/>
    <copy todir="${artifact.output.jmlbmc:jar}">
      <fileset dir="${artifact.temp.output.jmlbmc:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>

  <target name="run" depends="build.modules, build.all.artifacts" description="run program">
      <java jar="out/artifacts/jmlbmc_jar/jmlbmc.jar" fork="true">
          <arg line="${args}"/>
      </java>
  </target>
  <target name="tests" depends="build.modules, build.all.artifacts" description="run tests">
      <junit fork="true" showoutput="yes" printsummary="yes" haltonfailure="yes">
          <test name="tests.TestExecuter.runAllTests"/>
      </junit>
  </target>
</project>
