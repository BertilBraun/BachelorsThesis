
public class Deutsch {
  
  public Deutsch() {
    super();
  }
    /*@
      requires f != null && f.length == 2; 
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2; 
      ensures \result <==> (count(f) == f.length / 2); 
   */

  public static boolean isBalanced1BitBroken(/*@ non_null */ 
  boolean[] f) {
    if (f == null || f.length != 2) {
      throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
    }
    /*@ non_null */ 
    final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F}};
    float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F};
    float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F, 0.70710677F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F, 0.49999997F, 0.49999997F, 0.49999997F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F * m[0][0] + 0.49999997F * m[0][1] + 0.49999997F * m[0][2] + 0.49999997F * m[0][3], 0.49999997F * m[1][0] + 0.49999997F * m[1][1] + 0.49999997F * m[1][2] + 0.49999997F * m[1][3], 0.49999997F * m[2][0] + 0.49999997F * m[2][1] + 0.49999997F * m[2][2] + 0.49999997F * m[2][3], 0.49999997F * m[3][0] + 0.49999997F * m[3][1] + 0.49999997F * m[3][2] + 0.49999997F * m[3][3]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    boolean $$_tmp_measureVar1;
    if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1]) {
      q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3]};
      q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3]};
      $$_tmp_measureVar1 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F};
      $$_tmp_measureVar1 = false;
    }
    return $$_tmp_measureVar1;
  }
    /*@
      requires f != null && f.length == 2; 
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2; 
      ensures \result <==> (count(f) == f.length / 2); 
   */

  public static boolean isBalanced1Bit(/*@ non_null */ 
  boolean[] f) {
    if (f == null || f.length != 2) {
      throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
    }
    /*@ non_null */ 
    final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F}};
    float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F};
    float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F * m[0][0] + -0.49999997F * m[0][1] + 0.49999997F * m[0][2] + -0.49999997F * m[0][3], 0.49999997F * m[1][0] + -0.49999997F * m[1][1] + 0.49999997F * m[1][2] + -0.49999997F * m[1][3], 0.49999997F * m[2][0] + -0.49999997F * m[2][1] + 0.49999997F * m[2][2] + -0.49999997F * m[2][3], 0.49999997F * m[3][0] + -0.49999997F * m[3][1] + 0.49999997F * m[3][2] + -0.49999997F * m[3][3]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
    boolean $$_tmp_measureVar2;
    if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1]) {
      q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3]};
      q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3]};
      $$_tmp_measureVar2 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F};
      $$_tmp_measureVar2 = false;
    }
    return $$_tmp_measureVar2;
  }
    /*@
      requires f != null && f.length == 4; 
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2; 
      ensures \result <==> (count(f) == f.length / 2); 
   */

  public static boolean isBalanced2Bit(/*@ non_null */ 
  boolean[] f) {
    if (f == null || f.length != 4) {
      throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
    }
    /*@ non_null */ 
    final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F}};
    float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.35355335F * m[0][0] + -0.35355335F * m[0][1] + 0.35355335F * m[0][2] + -0.35355335F * m[0][3] + 0.35355335F * m[0][4] + -0.35355335F * m[0][5] + 0.35355335F * m[0][6] + -0.35355335F * m[0][7], 0.35355335F * m[1][0] + -0.35355335F * m[1][1] + 0.35355335F * m[1][2] + -0.35355335F * m[1][3] + 0.35355335F * m[1][4] + -0.35355335F * m[1][5] + 0.35355335F * m[1][6] + -0.35355335F * m[1][7], 0.35355335F * m[2][0] + -0.35355335F * m[2][1] + 0.35355335F * m[2][2] + -0.35355335F * m[2][3] + 0.35355335F * m[2][4] + -0.35355335F * m[2][5] + 0.35355335F * m[2][6] + -0.35355335F * m[2][7], 0.35355335F * m[3][0] + -0.35355335F * m[3][1] + 0.35355335F * m[3][2] + -0.35355335F * m[3][3] + 0.35355335F * m[3][4] + -0.35355335F * m[3][5] + 0.35355335F * m[3][6] + -0.35355335F * m[3][7], 0.35355335F * m[4][0] + -0.35355335F * m[4][1] + 0.35355335F * m[4][2] + -0.35355335F * m[4][3] + 0.35355335F * m[4][4] + -0.35355335F * m[4][5] + 0.35355335F * m[4][6] + -0.35355335F * m[4][7], 0.35355335F * m[5][0] + -0.35355335F * m[5][1] + 0.35355335F * m[5][2] + -0.35355335F * m[5][3] + 0.35355335F * m[5][4] + -0.35355335F * m[5][5] + 0.35355335F * m[5][6] + -0.35355335F * m[5][7], 0.35355335F * m[6][0] + -0.35355335F * m[6][1] + 0.35355335F * m[6][2] + -0.35355335F * m[6][3] + 0.35355335F * m[6][4] + -0.35355335F * m[6][5] + 0.35355335F * m[6][6] + -0.35355335F * m[6][7], 0.35355335F * m[7][0] + -0.35355335F * m[7][1] + 0.35355335F * m[7][2] + -0.35355335F * m[7][3] + 0.35355335F * m[7][4] + -0.35355335F * m[7][5] + 0.35355335F * m[7][6] + -0.35355335F * m[7][7]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    boolean $$_tmp_measureVar3;
    if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7]};
      $$_tmp_measureVar3 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar3 = false;
    }
    boolean $$_tmp_measureVar4;
    if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5]) {
      q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7]};
      q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7]};
      $$_tmp_measureVar4 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F};
      $$_tmp_measureVar4 = false;
    }
    return $$_tmp_measureVar3 || $$_tmp_measureVar4;
  }
    /*@
      requires f != null && f.length == 8; 
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2; 
      ensures \result <==> (count(f) == f.length / 2); 
   */

  public static boolean isBalanced3Bit(/*@ non_null */ 
  boolean[] f) {
    if (f == null || f.length != 8) {
      throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
    }
    /*@ non_null */ 
    final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[4] ? 1.0F : 0.0F, f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[4] ? 1.0F : 0.0F, !f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[5] ? 1.0F : 0.0F, f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[5] ? 1.0F : 0.0F, !f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[6] ? 1.0F : 0.0F, f[6] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[6] ? 1.0F : 0.0F, !f[6] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[7] ? 1.0F : 0.0F, f[7] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[7] ? 1.0F : 0.0F, !f[7] ? 1.0F : 0.0F}};
    float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.24999997F * m[0][0] + -0.24999997F * m[0][1] + 0.24999997F * m[0][2] + -0.24999997F * m[0][3] + 0.24999997F * m[0][4] + -0.24999997F * m[0][5] + 0.24999997F * m[0][6] + -0.24999997F * m[0][7] + 0.24999997F * m[0][8] + -0.24999997F * m[0][9] + 0.24999997F * m[0][10] + -0.24999997F * m[0][11] + 0.24999997F * m[0][12] + -0.24999997F * m[0][13] + 0.24999997F * m[0][14] + -0.24999997F * m[0][15], 0.24999997F * m[1][0] + -0.24999997F * m[1][1] + 0.24999997F * m[1][2] + -0.24999997F * m[1][3] + 0.24999997F * m[1][4] + -0.24999997F * m[1][5] + 0.24999997F * m[1][6] + -0.24999997F * m[1][7] + 0.24999997F * m[1][8] + -0.24999997F * m[1][9] + 0.24999997F * m[1][10] + -0.24999997F * m[1][11] + 0.24999997F * m[1][12] + -0.24999997F * m[1][13] + 0.24999997F * m[1][14] + -0.24999997F * m[1][15], 0.24999997F * m[2][0] + -0.24999997F * m[2][1] + 0.24999997F * m[2][2] + -0.24999997F * m[2][3] + 0.24999997F * m[2][4] + -0.24999997F * m[2][5] + 0.24999997F * m[2][6] + -0.24999997F * m[2][7] + 0.24999997F * m[2][8] + -0.24999997F * m[2][9] + 0.24999997F * m[2][10] + -0.24999997F * m[2][11] + 0.24999997F * m[2][12] + -0.24999997F * m[2][13] + 0.24999997F * m[2][14] + -0.24999997F * m[2][15], 0.24999997F * m[3][0] + -0.24999997F * m[3][1] + 0.24999997F * m[3][2] + -0.24999997F * m[3][3] + 0.24999997F * m[3][4] + -0.24999997F * m[3][5] + 0.24999997F * m[3][6] + -0.24999997F * m[3][7] + 0.24999997F * m[3][8] + -0.24999997F * m[3][9] + 0.24999997F * m[3][10] + -0.24999997F * m[3][11] + 0.24999997F * m[3][12] + -0.24999997F * m[3][13] + 0.24999997F * m[3][14] + -0.24999997F * m[3][15], 0.24999997F * m[4][0] + -0.24999997F * m[4][1] + 0.24999997F * m[4][2] + -0.24999997F * m[4][3] + 0.24999997F * m[4][4] + -0.24999997F * m[4][5] + 0.24999997F * m[4][6] + -0.24999997F * m[4][7] + 0.24999997F * m[4][8] + -0.24999997F * m[4][9] + 0.24999997F * m[4][10] + -0.24999997F * m[4][11] + 0.24999997F * m[4][12] + -0.24999997F * m[4][13] + 0.24999997F * m[4][14] + -0.24999997F * m[4][15], 0.24999997F * m[5][0] + -0.24999997F * m[5][1] + 0.24999997F * m[5][2] + -0.24999997F * m[5][3] + 0.24999997F * m[5][4] + -0.24999997F * m[5][5] + 0.24999997F * m[5][6] + -0.24999997F * m[5][7] + 0.24999997F * m[5][8] + -0.24999997F * m[5][9] + 0.24999997F * m[5][10] + -0.24999997F * m[5][11] + 0.24999997F * m[5][12] + -0.24999997F * m[5][13] + 0.24999997F * m[5][14] + -0.24999997F * m[5][15], 0.24999997F * m[6][0] + -0.24999997F * m[6][1] + 0.24999997F * m[6][2] + -0.24999997F * m[6][3] + 0.24999997F * m[6][4] + -0.24999997F * m[6][5] + 0.24999997F * m[6][6] + -0.24999997F * m[6][7] + 0.24999997F * m[6][8] + -0.24999997F * m[6][9] + 0.24999997F * m[6][10] + -0.24999997F * m[6][11] + 0.24999997F * m[6][12] + -0.24999997F * m[6][13] + 0.24999997F * m[6][14] + -0.24999997F * m[6][15], 0.24999997F * m[7][0] + -0.24999997F * m[7][1] + 0.24999997F * m[7][2] + -0.24999997F * m[7][3] + 0.24999997F * m[7][4] + -0.24999997F * m[7][5] + 0.24999997F * m[7][6] + -0.24999997F * m[7][7] + 0.24999997F * m[7][8] + -0.24999997F * m[7][9] + 0.24999997F * m[7][10] + -0.24999997F * m[7][11] + 0.24999997F * m[7][12] + -0.24999997F * m[7][13] + 0.24999997F * m[7][14] + -0.24999997F * m[7][15], 0.24999997F * m[8][0] + -0.24999997F * m[8][1] + 0.24999997F * m[8][2] + -0.24999997F * m[8][3] + 0.24999997F * m[8][4] + -0.24999997F * m[8][5] + 0.24999997F * m[8][6] + -0.24999997F * m[8][7] + 0.24999997F * m[8][8] + -0.24999997F * m[8][9] + 0.24999997F * m[8][10] + -0.24999997F * m[8][11] + 0.24999997F * m[8][12] + -0.24999997F * m[8][13] + 0.24999997F * m[8][14] + -0.24999997F * m[8][15], 0.24999997F * m[9][0] + -0.24999997F * m[9][1] + 0.24999997F * m[9][2] + -0.24999997F * m[9][3] + 0.24999997F * m[9][4] + -0.24999997F * m[9][5] + 0.24999997F * m[9][6] + -0.24999997F * m[9][7] + 0.24999997F * m[9][8] + -0.24999997F * m[9][9] + 0.24999997F * m[9][10] + -0.24999997F * m[9][11] + 0.24999997F * m[9][12] + -0.24999997F * m[9][13] + 0.24999997F * m[9][14] + -0.24999997F * m[9][15], 0.24999997F * m[10][0] + -0.24999997F * m[10][1] + 0.24999997F * m[10][2] + -0.24999997F * m[10][3] + 0.24999997F * m[10][4] + -0.24999997F * m[10][5] + 0.24999997F * m[10][6] + -0.24999997F * m[10][7] + 0.24999997F * m[10][8] + -0.24999997F * m[10][9] + 0.24999997F * m[10][10] + -0.24999997F * m[10][11] + 0.24999997F * m[10][12] + -0.24999997F * m[10][13] + 0.24999997F * m[10][14] + -0.24999997F * m[10][15], 0.24999997F * m[11][0] + -0.24999997F * m[11][1] + 0.24999997F * m[11][2] + -0.24999997F * m[11][3] + 0.24999997F * m[11][4] + -0.24999997F * m[11][5] + 0.24999997F * m[11][6] + -0.24999997F * m[11][7] + 0.24999997F * m[11][8] + -0.24999997F * m[11][9] + 0.24999997F * m[11][10] + -0.24999997F * m[11][11] + 0.24999997F * m[11][12] + -0.24999997F * m[11][13] + 0.24999997F * m[11][14] + -0.24999997F * m[11][15], 0.24999997F * m[12][0] + -0.24999997F * m[12][1] + 0.24999997F * m[12][2] + -0.24999997F * m[12][3] + 0.24999997F * m[12][4] + -0.24999997F * m[12][5] + 0.24999997F * m[12][6] + -0.24999997F * m[12][7] + 0.24999997F * m[12][8] + -0.24999997F * m[12][9] + 0.24999997F * m[12][10] + -0.24999997F * m[12][11] + 0.24999997F * m[12][12] + -0.24999997F * m[12][13] + 0.24999997F * m[12][14] + -0.24999997F * m[12][15], 0.24999997F * m[13][0] + -0.24999997F * m[13][1] + 0.24999997F * m[13][2] + -0.24999997F * m[13][3] + 0.24999997F * m[13][4] + -0.24999997F * m[13][5] + 0.24999997F * m[13][6] + -0.24999997F * m[13][7] + 0.24999997F * m[13][8] + -0.24999997F * m[13][9] + 0.24999997F * m[13][10] + -0.24999997F * m[13][11] + 0.24999997F * m[13][12] + -0.24999997F * m[13][13] + 0.24999997F * m[13][14] + -0.24999997F * m[13][15], 0.24999997F * m[14][0] + -0.24999997F * m[14][1] + 0.24999997F * m[14][2] + -0.24999997F * m[14][3] + 0.24999997F * m[14][4] + -0.24999997F * m[14][5] + 0.24999997F * m[14][6] + -0.24999997F * m[14][7] + 0.24999997F * m[14][8] + -0.24999997F * m[14][9] + 0.24999997F * m[14][10] + -0.24999997F * m[14][11] + 0.24999997F * m[14][12] + -0.24999997F * m[14][13] + 0.24999997F * m[14][14] + -0.24999997F * m[14][15], 0.24999997F * m[15][0] + -0.24999997F * m[15][1] + 0.24999997F * m[15][2] + -0.24999997F * m[15][3] + 0.24999997F * m[15][4] + -0.24999997F * m[15][5] + 0.24999997F * m[15][6] + -0.24999997F * m[15][7] + 0.24999997F * m[15][8] + -0.24999997F * m[15][9] + 0.24999997F * m[15][10] + -0.24999997F * m[15][11] + 0.24999997F * m[15][12] + -0.24999997F * m[15][13] + 0.24999997F * m[15][14] + -0.24999997F * m[15][15]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[15]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[15]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[15]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    boolean $$_tmp_measureVar5;
    if (q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
      $$_tmp_measureVar5 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar5 = false;
    }
    boolean $$_tmp_measureVar6;
    if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
      $$_tmp_measureVar6 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar6 = false;
    }
    boolean $$_tmp_measureVar7;
    if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13]) {
      q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7], 0.0F, 0.0F, q_state_0[10], q_state_0[11], 0.0F, 0.0F, q_state_0[14], q_state_0[15]};
      q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7], 0.0F, 0.0F, q_state_1[10], q_state_1[11], 0.0F, 0.0F, q_state_1[14], q_state_1[15]};
      $$_tmp_measureVar7 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F, q_state_0[8], q_state_0[9], 0.0F, 0.0F, q_state_0[12], q_state_0[13], 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F, q_state_1[8], q_state_1[9], 0.0F, 0.0F, q_state_1[12], q_state_1[13], 0.0F, 0.0F};
      $$_tmp_measureVar7 = false;
    }
    return $$_tmp_measureVar5 || $$_tmp_measureVar6 || $$_tmp_measureVar7;
  }
    /*@
      requires f != null && f.length == 16; 
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2; 
      ensures \result <==> (count(f) == f.length / 2); 
   */

  public static boolean isBalanced4Bit(/*@ non_null */ 
  boolean[] f) {
    if (f == null || f.length != 16) {
      throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
    }
    /*@ non_null */ 
    final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[4] ? 1.0F : 0.0F, f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[4] ? 1.0F : 0.0F, !f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[5] ? 1.0F : 0.0F, f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[5] ? 1.0F : 0.0F, !f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[6] ? 1.0F : 0.0F, f[6] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[6] ? 1.0F : 0.0F, !f[6] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[7] ? 1.0F : 0.0F, f[7] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[7] ? 1.0F : 0.0F, !f[7] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[8] ? 1.0F : 0.0F, f[8] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[8] ? 1.0F : 0.0F, !f[8] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[9] ? 1.0F : 0.0F, f[9] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[9] ? 1.0F : 0.0F, !f[9] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[10] ? 1.0F : 0.0F, f[10] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[10] ? 1.0F : 0.0F, !f[10] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[11] ? 1.0F : 0.0F, f[11] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[11] ? 1.0F : 0.0F, !f[11] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[12] ? 1.0F : 0.0F, f[12] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[12] ? 1.0F : 0.0F, !f[12] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[13] ? 1.0F : 0.0F, f[13] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[13] ? 1.0F : 0.0F, !f[13] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[14] ? 1.0F : 0.0F, f[14] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[14] ? 1.0F : 0.0F, !f[14] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[15] ? 1.0F : 0.0F, f[15] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[15] ? 1.0F : 0.0F, !f[15] ? 1.0F : 0.0F}};
    float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.17677668F * m[0][0] + -0.17677668F * m[0][1] + 0.17677668F * m[0][2] + -0.17677668F * m[0][3] + 0.17677668F * m[0][4] + -0.17677668F * m[0][5] + 0.17677668F * m[0][6] + -0.17677668F * m[0][7] + 0.17677668F * m[0][8] + -0.17677668F * m[0][9] + 0.17677668F * m[0][10] + -0.17677668F * m[0][11] + 0.17677668F * m[0][12] + -0.17677668F * m[0][13] + 0.17677668F * m[0][14] + -0.17677668F * m[0][15] + 0.17677668F * m[0][16] + -0.17677668F * m[0][17] + 0.17677668F * m[0][18] + -0.17677668F * m[0][19] + 0.17677668F * m[0][20] + -0.17677668F * m[0][21] + 0.17677668F * m[0][22] + -0.17677668F * m[0][23] + 0.17677668F * m[0][24] + -0.17677668F * m[0][25] + 0.17677668F * m[0][26] + -0.17677668F * m[0][27] + 0.17677668F * m[0][28] + -0.17677668F * m[0][29] + 0.17677668F * m[0][30] + -0.17677668F * m[0][31], 0.17677668F * m[1][0] + -0.17677668F * m[1][1] + 0.17677668F * m[1][2] + -0.17677668F * m[1][3] + 0.17677668F * m[1][4] + -0.17677668F * m[1][5] + 0.17677668F * m[1][6] + -0.17677668F * m[1][7] + 0.17677668F * m[1][8] + -0.17677668F * m[1][9] + 0.17677668F * m[1][10] + -0.17677668F * m[1][11] + 0.17677668F * m[1][12] + -0.17677668F * m[1][13] + 0.17677668F * m[1][14] + -0.17677668F * m[1][15] + 0.17677668F * m[1][16] + -0.17677668F * m[1][17] + 0.17677668F * m[1][18] + -0.17677668F * m[1][19] + 0.17677668F * m[1][20] + -0.17677668F * m[1][21] + 0.17677668F * m[1][22] + -0.17677668F * m[1][23] + 0.17677668F * m[1][24] + -0.17677668F * m[1][25] + 0.17677668F * m[1][26] + -0.17677668F * m[1][27] + 0.17677668F * m[1][28] + -0.17677668F * m[1][29] + 0.17677668F * m[1][30] + -0.17677668F * m[1][31], 0.17677668F * m[2][0] + -0.17677668F * m[2][1] + 0.17677668F * m[2][2] + -0.17677668F * m[2][3] + 0.17677668F * m[2][4] + -0.17677668F * m[2][5] + 0.17677668F * m[2][6] + -0.17677668F * m[2][7] + 0.17677668F * m[2][8] + -0.17677668F * m[2][9] + 0.17677668F * m[2][10] + -0.17677668F * m[2][11] + 0.17677668F * m[2][12] + -0.17677668F * m[2][13] + 0.17677668F * m[2][14] + -0.17677668F * m[2][15] + 0.17677668F * m[2][16] + -0.17677668F * m[2][17] + 0.17677668F * m[2][18] + -0.17677668F * m[2][19] + 0.17677668F * m[2][20] + -0.17677668F * m[2][21] + 0.17677668F * m[2][22] + -0.17677668F * m[2][23] + 0.17677668F * m[2][24] + -0.17677668F * m[2][25] + 0.17677668F * m[2][26] + -0.17677668F * m[2][27] + 0.17677668F * m[2][28] + -0.17677668F * m[2][29] + 0.17677668F * m[2][30] + -0.17677668F * m[2][31], 0.17677668F * m[3][0] + -0.17677668F * m[3][1] + 0.17677668F * m[3][2] + -0.17677668F * m[3][3] + 0.17677668F * m[3][4] + -0.17677668F * m[3][5] + 0.17677668F * m[3][6] + -0.17677668F * m[3][7] + 0.17677668F * m[3][8] + -0.17677668F * m[3][9] + 0.17677668F * m[3][10] + -0.17677668F * m[3][11] + 0.17677668F * m[3][12] + -0.17677668F * m[3][13] + 0.17677668F * m[3][14] + -0.17677668F * m[3][15] + 0.17677668F * m[3][16] + -0.17677668F * m[3][17] + 0.17677668F * m[3][18] + -0.17677668F * m[3][19] + 0.17677668F * m[3][20] + -0.17677668F * m[3][21] + 0.17677668F * m[3][22] + -0.17677668F * m[3][23] + 0.17677668F * m[3][24] + -0.17677668F * m[3][25] + 0.17677668F * m[3][26] + -0.17677668F * m[3][27] + 0.17677668F * m[3][28] + -0.17677668F * m[3][29] + 0.17677668F * m[3][30] + -0.17677668F * m[3][31], 0.17677668F * m[4][0] + -0.17677668F * m[4][1] + 0.17677668F * m[4][2] + -0.17677668F * m[4][3] + 0.17677668F * m[4][4] + -0.17677668F * m[4][5] + 0.17677668F * m[4][6] + -0.17677668F * m[4][7] + 0.17677668F * m[4][8] + -0.17677668F * m[4][9] + 0.17677668F * m[4][10] + -0.17677668F * m[4][11] + 0.17677668F * m[4][12] + -0.17677668F * m[4][13] + 0.17677668F * m[4][14] + -0.17677668F * m[4][15] + 0.17677668F * m[4][16] + -0.17677668F * m[4][17] + 0.17677668F * m[4][18] + -0.17677668F * m[4][19] + 0.17677668F * m[4][20] + -0.17677668F * m[4][21] + 0.17677668F * m[4][22] + -0.17677668F * m[4][23] + 0.17677668F * m[4][24] + -0.17677668F * m[4][25] + 0.17677668F * m[4][26] + -0.17677668F * m[4][27] + 0.17677668F * m[4][28] + -0.17677668F * m[4][29] + 0.17677668F * m[4][30] + -0.17677668F * m[4][31], 0.17677668F * m[5][0] + -0.17677668F * m[5][1] + 0.17677668F * m[5][2] + -0.17677668F * m[5][3] + 0.17677668F * m[5][4] + -0.17677668F * m[5][5] + 0.17677668F * m[5][6] + -0.17677668F * m[5][7] + 0.17677668F * m[5][8] + -0.17677668F * m[5][9] + 0.17677668F * m[5][10] + -0.17677668F * m[5][11] + 0.17677668F * m[5][12] + -0.17677668F * m[5][13] + 0.17677668F * m[5][14] + -0.17677668F * m[5][15] + 0.17677668F * m[5][16] + -0.17677668F * m[5][17] + 0.17677668F * m[5][18] + -0.17677668F * m[5][19] + 0.17677668F * m[5][20] + -0.17677668F * m[5][21] + 0.17677668F * m[5][22] + -0.17677668F * m[5][23] + 0.17677668F * m[5][24] + -0.17677668F * m[5][25] + 0.17677668F * m[5][26] + -0.17677668F * m[5][27] + 0.17677668F * m[5][28] + -0.17677668F * m[5][29] + 0.17677668F * m[5][30] + -0.17677668F * m[5][31], 0.17677668F * m[6][0] + -0.17677668F * m[6][1] + 0.17677668F * m[6][2] + -0.17677668F * m[6][3] + 0.17677668F * m[6][4] + -0.17677668F * m[6][5] + 0.17677668F * m[6][6] + -0.17677668F * m[6][7] + 0.17677668F * m[6][8] + -0.17677668F * m[6][9] + 0.17677668F * m[6][10] + -0.17677668F * m[6][11] + 0.17677668F * m[6][12] + -0.17677668F * m[6][13] + 0.17677668F * m[6][14] + -0.17677668F * m[6][15] + 0.17677668F * m[6][16] + -0.17677668F * m[6][17] + 0.17677668F * m[6][18] + -0.17677668F * m[6][19] + 0.17677668F * m[6][20] + -0.17677668F * m[6][21] + 0.17677668F * m[6][22] + -0.17677668F * m[6][23] + 0.17677668F * m[6][24] + -0.17677668F * m[6][25] + 0.17677668F * m[6][26] + -0.17677668F * m[6][27] + 0.17677668F * m[6][28] + -0.17677668F * m[6][29] + 0.17677668F * m[6][30] + -0.17677668F * m[6][31], 0.17677668F * m[7][0] + -0.17677668F * m[7][1] + 0.17677668F * m[7][2] + -0.17677668F * m[7][3] + 0.17677668F * m[7][4] + -0.17677668F * m[7][5] + 0.17677668F * m[7][6] + -0.17677668F * m[7][7] + 0.17677668F * m[7][8] + -0.17677668F * m[7][9] + 0.17677668F * m[7][10] + -0.17677668F * m[7][11] + 0.17677668F * m[7][12] + -0.17677668F * m[7][13] + 0.17677668F * m[7][14] + -0.17677668F * m[7][15] + 0.17677668F * m[7][16] + -0.17677668F * m[7][17] + 0.17677668F * m[7][18] + -0.17677668F * m[7][19] + 0.17677668F * m[7][20] + -0.17677668F * m[7][21] + 0.17677668F * m[7][22] + -0.17677668F * m[7][23] + 0.17677668F * m[7][24] + -0.17677668F * m[7][25] + 0.17677668F * m[7][26] + -0.17677668F * m[7][27] + 0.17677668F * m[7][28] + -0.17677668F * m[7][29] + 0.17677668F * m[7][30] + -0.17677668F * m[7][31], 0.17677668F * m[8][0] + -0.17677668F * m[8][1] + 0.17677668F * m[8][2] + -0.17677668F * m[8][3] + 0.17677668F * m[8][4] + -0.17677668F * m[8][5] + 0.17677668F * m[8][6] + -0.17677668F * m[8][7] + 0.17677668F * m[8][8] + -0.17677668F * m[8][9] + 0.17677668F * m[8][10] + -0.17677668F * m[8][11] + 0.17677668F * m[8][12] + -0.17677668F * m[8][13] + 0.17677668F * m[8][14] + -0.17677668F * m[8][15] + 0.17677668F * m[8][16] + -0.17677668F * m[8][17] + 0.17677668F * m[8][18] + -0.17677668F * m[8][19] + 0.17677668F * m[8][20] + -0.17677668F * m[8][21] + 0.17677668F * m[8][22] + -0.17677668F * m[8][23] + 0.17677668F * m[8][24] + -0.17677668F * m[8][25] + 0.17677668F * m[8][26] + -0.17677668F * m[8][27] + 0.17677668F * m[8][28] + -0.17677668F * m[8][29] + 0.17677668F * m[8][30] + -0.17677668F * m[8][31], 0.17677668F * m[9][0] + -0.17677668F * m[9][1] + 0.17677668F * m[9][2] + -0.17677668F * m[9][3] + 0.17677668F * m[9][4] + -0.17677668F * m[9][5] + 0.17677668F * m[9][6] + -0.17677668F * m[9][7] + 0.17677668F * m[9][8] + -0.17677668F * m[9][9] + 0.17677668F * m[9][10] + -0.17677668F * m[9][11] + 0.17677668F * m[9][12] + -0.17677668F * m[9][13] + 0.17677668F * m[9][14] + -0.17677668F * m[9][15] + 0.17677668F * m[9][16] + -0.17677668F * m[9][17] + 0.17677668F * m[9][18] + -0.17677668F * m[9][19] + 0.17677668F * m[9][20] + -0.17677668F * m[9][21] + 0.17677668F * m[9][22] + -0.17677668F * m[9][23] + 0.17677668F * m[9][24] + -0.17677668F * m[9][25] + 0.17677668F * m[9][26] + -0.17677668F * m[9][27] + 0.17677668F * m[9][28] + -0.17677668F * m[9][29] + 0.17677668F * m[9][30] + -0.17677668F * m[9][31], 0.17677668F * m[10][0] + -0.17677668F * m[10][1] + 0.17677668F * m[10][2] + -0.17677668F * m[10][3] + 0.17677668F * m[10][4] + -0.17677668F * m[10][5] + 0.17677668F * m[10][6] + -0.17677668F * m[10][7] + 0.17677668F * m[10][8] + -0.17677668F * m[10][9] + 0.17677668F * m[10][10] + -0.17677668F * m[10][11] + 0.17677668F * m[10][12] + -0.17677668F * m[10][13] + 0.17677668F * m[10][14] + -0.17677668F * m[10][15] + 0.17677668F * m[10][16] + -0.17677668F * m[10][17] + 0.17677668F * m[10][18] + -0.17677668F * m[10][19] + 0.17677668F * m[10][20] + -0.17677668F * m[10][21] + 0.17677668F * m[10][22] + -0.17677668F * m[10][23] + 0.17677668F * m[10][24] + -0.17677668F * m[10][25] + 0.17677668F * m[10][26] + -0.17677668F * m[10][27] + 0.17677668F * m[10][28] + -0.17677668F * m[10][29] + 0.17677668F * m[10][30] + -0.17677668F * m[10][31], 0.17677668F * m[11][0] + -0.17677668F * m[11][1] + 0.17677668F * m[11][2] + -0.17677668F * m[11][3] + 0.17677668F * m[11][4] + -0.17677668F * m[11][5] + 0.17677668F * m[11][6] + -0.17677668F * m[11][7] + 0.17677668F * m[11][8] + -0.17677668F * m[11][9] + 0.17677668F * m[11][10] + -0.17677668F * m[11][11] + 0.17677668F * m[11][12] + -0.17677668F * m[11][13] + 0.17677668F * m[11][14] + -0.17677668F * m[11][15] + 0.17677668F * m[11][16] + -0.17677668F * m[11][17] + 0.17677668F * m[11][18] + -0.17677668F * m[11][19] + 0.17677668F * m[11][20] + -0.17677668F * m[11][21] + 0.17677668F * m[11][22] + -0.17677668F * m[11][23] + 0.17677668F * m[11][24] + -0.17677668F * m[11][25] + 0.17677668F * m[11][26] + -0.17677668F * m[11][27] + 0.17677668F * m[11][28] + -0.17677668F * m[11][29] + 0.17677668F * m[11][30] + -0.17677668F * m[11][31], 0.17677668F * m[12][0] + -0.17677668F * m[12][1] + 0.17677668F * m[12][2] + -0.17677668F * m[12][3] + 0.17677668F * m[12][4] + -0.17677668F * m[12][5] + 0.17677668F * m[12][6] + -0.17677668F * m[12][7] + 0.17677668F * m[12][8] + -0.17677668F * m[12][9] + 0.17677668F * m[12][10] + -0.17677668F * m[12][11] + 0.17677668F * m[12][12] + -0.17677668F * m[12][13] + 0.17677668F * m[12][14] + -0.17677668F * m[12][15] + 0.17677668F * m[12][16] + -0.17677668F * m[12][17] + 0.17677668F * m[12][18] + -0.17677668F * m[12][19] + 0.17677668F * m[12][20] + -0.17677668F * m[12][21] + 0.17677668F * m[12][22] + -0.17677668F * m[12][23] + 0.17677668F * m[12][24] + -0.17677668F * m[12][25] + 0.17677668F * m[12][26] + -0.17677668F * m[12][27] + 0.17677668F * m[12][28] + -0.17677668F * m[12][29] + 0.17677668F * m[12][30] + -0.17677668F * m[12][31], 0.17677668F * m[13][0] + -0.17677668F * m[13][1] + 0.17677668F * m[13][2] + -0.17677668F * m[13][3] + 0.17677668F * m[13][4] + -0.17677668F * m[13][5] + 0.17677668F * m[13][6] + -0.17677668F * m[13][7] + 0.17677668F * m[13][8] + -0.17677668F * m[13][9] + 0.17677668F * m[13][10] + -0.17677668F * m[13][11] + 0.17677668F * m[13][12] + -0.17677668F * m[13][13] + 0.17677668F * m[13][14] + -0.17677668F * m[13][15] + 0.17677668F * m[13][16] + -0.17677668F * m[13][17] + 0.17677668F * m[13][18] + -0.17677668F * m[13][19] + 0.17677668F * m[13][20] + -0.17677668F * m[13][21] + 0.17677668F * m[13][22] + -0.17677668F * m[13][23] + 0.17677668F * m[13][24] + -0.17677668F * m[13][25] + 0.17677668F * m[13][26] + -0.17677668F * m[13][27] + 0.17677668F * m[13][28] + -0.17677668F * m[13][29] + 0.17677668F * m[13][30] + -0.17677668F * m[13][31], 0.17677668F * m[14][0] + -0.17677668F * m[14][1] + 0.17677668F * m[14][2] + -0.17677668F * m[14][3] + 0.17677668F * m[14][4] + -0.17677668F * m[14][5] + 0.17677668F * m[14][6] + -0.17677668F * m[14][7] + 0.17677668F * m[14][8] + -0.17677668F * m[14][9] + 0.17677668F * m[14][10] + -0.17677668F * m[14][11] + 0.17677668F * m[14][12] + -0.17677668F * m[14][13] + 0.17677668F * m[14][14] + -0.17677668F * m[14][15] + 0.17677668F * m[14][16] + -0.17677668F * m[14][17] + 0.17677668F * m[14][18] + -0.17677668F * m[14][19] + 0.17677668F * m[14][20] + -0.17677668F * m[14][21] + 0.17677668F * m[14][22] + -0.17677668F * m[14][23] + 0.17677668F * m[14][24] + -0.17677668F * m[14][25] + 0.17677668F * m[14][26] + -0.17677668F * m[14][27] + 0.17677668F * m[14][28] + -0.17677668F * m[14][29] + 0.17677668F * m[14][30] + -0.17677668F * m[14][31], 0.17677668F * m[15][0] + -0.17677668F * m[15][1] + 0.17677668F * m[15][2] + -0.17677668F * m[15][3] + 0.17677668F * m[15][4] + -0.17677668F * m[15][5] + 0.17677668F * m[15][6] + -0.17677668F * m[15][7] + 0.17677668F * m[15][8] + -0.17677668F * m[15][9] + 0.17677668F * m[15][10] + -0.17677668F * m[15][11] + 0.17677668F * m[15][12] + -0.17677668F * m[15][13] + 0.17677668F * m[15][14] + -0.17677668F * m[15][15] + 0.17677668F * m[15][16] + -0.17677668F * m[15][17] + 0.17677668F * m[15][18] + -0.17677668F * m[15][19] + 0.17677668F * m[15][20] + -0.17677668F * m[15][21] + 0.17677668F * m[15][22] + -0.17677668F * m[15][23] + 0.17677668F * m[15][24] + -0.17677668F * m[15][25] + 0.17677668F * m[15][26] + -0.17677668F * m[15][27] + 0.17677668F * m[15][28] + -0.17677668F * m[15][29] + 0.17677668F * m[15][30] + -0.17677668F * m[15][31], 0.17677668F * m[16][0] + -0.17677668F * m[16][1] + 0.17677668F * m[16][2] + -0.17677668F * m[16][3] + 0.17677668F * m[16][4] + -0.17677668F * m[16][5] + 0.17677668F * m[16][6] + -0.17677668F * m[16][7] + 0.17677668F * m[16][8] + -0.17677668F * m[16][9] + 0.17677668F * m[16][10] + -0.17677668F * m[16][11] + 0.17677668F * m[16][12] + -0.17677668F * m[16][13] + 0.17677668F * m[16][14] + -0.17677668F * m[16][15] + 0.17677668F * m[16][16] + -0.17677668F * m[16][17] + 0.17677668F * m[16][18] + -0.17677668F * m[16][19] + 0.17677668F * m[16][20] + -0.17677668F * m[16][21] + 0.17677668F * m[16][22] + -0.17677668F * m[16][23] + 0.17677668F * m[16][24] + -0.17677668F * m[16][25] + 0.17677668F * m[16][26] + -0.17677668F * m[16][27] + 0.17677668F * m[16][28] + -0.17677668F * m[16][29] + 0.17677668F * m[16][30] + -0.17677668F * m[16][31], 0.17677668F * m[17][0] + -0.17677668F * m[17][1] + 0.17677668F * m[17][2] + -0.17677668F * m[17][3] + 0.17677668F * m[17][4] + -0.17677668F * m[17][5] + 0.17677668F * m[17][6] + -0.17677668F * m[17][7] + 0.17677668F * m[17][8] + -0.17677668F * m[17][9] + 0.17677668F * m[17][10] + -0.17677668F * m[17][11] + 0.17677668F * m[17][12] + -0.17677668F * m[17][13] + 0.17677668F * m[17][14] + -0.17677668F * m[17][15] + 0.17677668F * m[17][16] + -0.17677668F * m[17][17] + 0.17677668F * m[17][18] + -0.17677668F * m[17][19] + 0.17677668F * m[17][20] + -0.17677668F * m[17][21] + 0.17677668F * m[17][22] + -0.17677668F * m[17][23] + 0.17677668F * m[17][24] + -0.17677668F * m[17][25] + 0.17677668F * m[17][26] + -0.17677668F * m[17][27] + 0.17677668F * m[17][28] + -0.17677668F * m[17][29] + 0.17677668F * m[17][30] + -0.17677668F * m[17][31], 0.17677668F * m[18][0] + -0.17677668F * m[18][1] + 0.17677668F * m[18][2] + -0.17677668F * m[18][3] + 0.17677668F * m[18][4] + -0.17677668F * m[18][5] + 0.17677668F * m[18][6] + -0.17677668F * m[18][7] + 0.17677668F * m[18][8] + -0.17677668F * m[18][9] + 0.17677668F * m[18][10] + -0.17677668F * m[18][11] + 0.17677668F * m[18][12] + -0.17677668F * m[18][13] + 0.17677668F * m[18][14] + -0.17677668F * m[18][15] + 0.17677668F * m[18][16] + -0.17677668F * m[18][17] + 0.17677668F * m[18][18] + -0.17677668F * m[18][19] + 0.17677668F * m[18][20] + -0.17677668F * m[18][21] + 0.17677668F * m[18][22] + -0.17677668F * m[18][23] + 0.17677668F * m[18][24] + -0.17677668F * m[18][25] + 0.17677668F * m[18][26] + -0.17677668F * m[18][27] + 0.17677668F * m[18][28] + -0.17677668F * m[18][29] + 0.17677668F * m[18][30] + -0.17677668F * m[18][31], 0.17677668F * m[19][0] + -0.17677668F * m[19][1] + 0.17677668F * m[19][2] + -0.17677668F * m[19][3] + 0.17677668F * m[19][4] + -0.17677668F * m[19][5] + 0.17677668F * m[19][6] + -0.17677668F * m[19][7] + 0.17677668F * m[19][8] + -0.17677668F * m[19][9] + 0.17677668F * m[19][10] + -0.17677668F * m[19][11] + 0.17677668F * m[19][12] + -0.17677668F * m[19][13] + 0.17677668F * m[19][14] + -0.17677668F * m[19][15] + 0.17677668F * m[19][16] + -0.17677668F * m[19][17] + 0.17677668F * m[19][18] + -0.17677668F * m[19][19] + 0.17677668F * m[19][20] + -0.17677668F * m[19][21] + 0.17677668F * m[19][22] + -0.17677668F * m[19][23] + 0.17677668F * m[19][24] + -0.17677668F * m[19][25] + 0.17677668F * m[19][26] + -0.17677668F * m[19][27] + 0.17677668F * m[19][28] + -0.17677668F * m[19][29] + 0.17677668F * m[19][30] + -0.17677668F * m[19][31], 0.17677668F * m[20][0] + -0.17677668F * m[20][1] + 0.17677668F * m[20][2] + -0.17677668F * m[20][3] + 0.17677668F * m[20][4] + -0.17677668F * m[20][5] + 0.17677668F * m[20][6] + -0.17677668F * m[20][7] + 0.17677668F * m[20][8] + -0.17677668F * m[20][9] + 0.17677668F * m[20][10] + -0.17677668F * m[20][11] + 0.17677668F * m[20][12] + -0.17677668F * m[20][13] + 0.17677668F * m[20][14] + -0.17677668F * m[20][15] + 0.17677668F * m[20][16] + -0.17677668F * m[20][17] + 0.17677668F * m[20][18] + -0.17677668F * m[20][19] + 0.17677668F * m[20][20] + -0.17677668F * m[20][21] + 0.17677668F * m[20][22] + -0.17677668F * m[20][23] + 0.17677668F * m[20][24] + -0.17677668F * m[20][25] + 0.17677668F * m[20][26] + -0.17677668F * m[20][27] + 0.17677668F * m[20][28] + -0.17677668F * m[20][29] + 0.17677668F * m[20][30] + -0.17677668F * m[20][31], 0.17677668F * m[21][0] + -0.17677668F * m[21][1] + 0.17677668F * m[21][2] + -0.17677668F * m[21][3] + 0.17677668F * m[21][4] + -0.17677668F * m[21][5] + 0.17677668F * m[21][6] + -0.17677668F * m[21][7] + 0.17677668F * m[21][8] + -0.17677668F * m[21][9] + 0.17677668F * m[21][10] + -0.17677668F * m[21][11] + 0.17677668F * m[21][12] + -0.17677668F * m[21][13] + 0.17677668F * m[21][14] + -0.17677668F * m[21][15] + 0.17677668F * m[21][16] + -0.17677668F * m[21][17] + 0.17677668F * m[21][18] + -0.17677668F * m[21][19] + 0.17677668F * m[21][20] + -0.17677668F * m[21][21] + 0.17677668F * m[21][22] + -0.17677668F * m[21][23] + 0.17677668F * m[21][24] + -0.17677668F * m[21][25] + 0.17677668F * m[21][26] + -0.17677668F * m[21][27] + 0.17677668F * m[21][28] + -0.17677668F * m[21][29] + 0.17677668F * m[21][30] + -0.17677668F * m[21][31], 0.17677668F * m[22][0] + -0.17677668F * m[22][1] + 0.17677668F * m[22][2] + -0.17677668F * m[22][3] + 0.17677668F * m[22][4] + -0.17677668F * m[22][5] + 0.17677668F * m[22][6] + -0.17677668F * m[22][7] + 0.17677668F * m[22][8] + -0.17677668F * m[22][9] + 0.17677668F * m[22][10] + -0.17677668F * m[22][11] + 0.17677668F * m[22][12] + -0.17677668F * m[22][13] + 0.17677668F * m[22][14] + -0.17677668F * m[22][15] + 0.17677668F * m[22][16] + -0.17677668F * m[22][17] + 0.17677668F * m[22][18] + -0.17677668F * m[22][19] + 0.17677668F * m[22][20] + -0.17677668F * m[22][21] + 0.17677668F * m[22][22] + -0.17677668F * m[22][23] + 0.17677668F * m[22][24] + -0.17677668F * m[22][25] + 0.17677668F * m[22][26] + -0.17677668F * m[22][27] + 0.17677668F * m[22][28] + -0.17677668F * m[22][29] + 0.17677668F * m[22][30] + -0.17677668F * m[22][31], 0.17677668F * m[23][0] + -0.17677668F * m[23][1] + 0.17677668F * m[23][2] + -0.17677668F * m[23][3] + 0.17677668F * m[23][4] + -0.17677668F * m[23][5] + 0.17677668F * m[23][6] + -0.17677668F * m[23][7] + 0.17677668F * m[23][8] + -0.17677668F * m[23][9] + 0.17677668F * m[23][10] + -0.17677668F * m[23][11] + 0.17677668F * m[23][12] + -0.17677668F * m[23][13] + 0.17677668F * m[23][14] + -0.17677668F * m[23][15] + 0.17677668F * m[23][16] + -0.17677668F * m[23][17] + 0.17677668F * m[23][18] + -0.17677668F * m[23][19] + 0.17677668F * m[23][20] + -0.17677668F * m[23][21] + 0.17677668F * m[23][22] + -0.17677668F * m[23][23] + 0.17677668F * m[23][24] + -0.17677668F * m[23][25] + 0.17677668F * m[23][26] + -0.17677668F * m[23][27] + 0.17677668F * m[23][28] + -0.17677668F * m[23][29] + 0.17677668F * m[23][30] + -0.17677668F * m[23][31], 0.17677668F * m[24][0] + -0.17677668F * m[24][1] + 0.17677668F * m[24][2] + -0.17677668F * m[24][3] + 0.17677668F * m[24][4] + -0.17677668F * m[24][5] + 0.17677668F * m[24][6] + -0.17677668F * m[24][7] + 0.17677668F * m[24][8] + -0.17677668F * m[24][9] + 0.17677668F * m[24][10] + -0.17677668F * m[24][11] + 0.17677668F * m[24][12] + -0.17677668F * m[24][13] + 0.17677668F * m[24][14] + -0.17677668F * m[24][15] + 0.17677668F * m[24][16] + -0.17677668F * m[24][17] + 0.17677668F * m[24][18] + -0.17677668F * m[24][19] + 0.17677668F * m[24][20] + -0.17677668F * m[24][21] + 0.17677668F * m[24][22] + -0.17677668F * m[24][23] + 0.17677668F * m[24][24] + -0.17677668F * m[24][25] + 0.17677668F * m[24][26] + -0.17677668F * m[24][27] + 0.17677668F * m[24][28] + -0.17677668F * m[24][29] + 0.17677668F * m[24][30] + -0.17677668F * m[24][31], 0.17677668F * m[25][0] + -0.17677668F * m[25][1] + 0.17677668F * m[25][2] + -0.17677668F * m[25][3] + 0.17677668F * m[25][4] + -0.17677668F * m[25][5] + 0.17677668F * m[25][6] + -0.17677668F * m[25][7] + 0.17677668F * m[25][8] + -0.17677668F * m[25][9] + 0.17677668F * m[25][10] + -0.17677668F * m[25][11] + 0.17677668F * m[25][12] + -0.17677668F * m[25][13] + 0.17677668F * m[25][14] + -0.17677668F * m[25][15] + 0.17677668F * m[25][16] + -0.17677668F * m[25][17] + 0.17677668F * m[25][18] + -0.17677668F * m[25][19] + 0.17677668F * m[25][20] + -0.17677668F * m[25][21] + 0.17677668F * m[25][22] + -0.17677668F * m[25][23] + 0.17677668F * m[25][24] + -0.17677668F * m[25][25] + 0.17677668F * m[25][26] + -0.17677668F * m[25][27] + 0.17677668F * m[25][28] + -0.17677668F * m[25][29] + 0.17677668F * m[25][30] + -0.17677668F * m[25][31], 0.17677668F * m[26][0] + -0.17677668F * m[26][1] + 0.17677668F * m[26][2] + -0.17677668F * m[26][3] + 0.17677668F * m[26][4] + -0.17677668F * m[26][5] + 0.17677668F * m[26][6] + -0.17677668F * m[26][7] + 0.17677668F * m[26][8] + -0.17677668F * m[26][9] + 0.17677668F * m[26][10] + -0.17677668F * m[26][11] + 0.17677668F * m[26][12] + -0.17677668F * m[26][13] + 0.17677668F * m[26][14] + -0.17677668F * m[26][15] + 0.17677668F * m[26][16] + -0.17677668F * m[26][17] + 0.17677668F * m[26][18] + -0.17677668F * m[26][19] + 0.17677668F * m[26][20] + -0.17677668F * m[26][21] + 0.17677668F * m[26][22] + -0.17677668F * m[26][23] + 0.17677668F * m[26][24] + -0.17677668F * m[26][25] + 0.17677668F * m[26][26] + -0.17677668F * m[26][27] + 0.17677668F * m[26][28] + -0.17677668F * m[26][29] + 0.17677668F * m[26][30] + -0.17677668F * m[26][31], 0.17677668F * m[27][0] + -0.17677668F * m[27][1] + 0.17677668F * m[27][2] + -0.17677668F * m[27][3] + 0.17677668F * m[27][4] + -0.17677668F * m[27][5] + 0.17677668F * m[27][6] + -0.17677668F * m[27][7] + 0.17677668F * m[27][8] + -0.17677668F * m[27][9] + 0.17677668F * m[27][10] + -0.17677668F * m[27][11] + 0.17677668F * m[27][12] + -0.17677668F * m[27][13] + 0.17677668F * m[27][14] + -0.17677668F * m[27][15] + 0.17677668F * m[27][16] + -0.17677668F * m[27][17] + 0.17677668F * m[27][18] + -0.17677668F * m[27][19] + 0.17677668F * m[27][20] + -0.17677668F * m[27][21] + 0.17677668F * m[27][22] + -0.17677668F * m[27][23] + 0.17677668F * m[27][24] + -0.17677668F * m[27][25] + 0.17677668F * m[27][26] + -0.17677668F * m[27][27] + 0.17677668F * m[27][28] + -0.17677668F * m[27][29] + 0.17677668F * m[27][30] + -0.17677668F * m[27][31], 0.17677668F * m[28][0] + -0.17677668F * m[28][1] + 0.17677668F * m[28][2] + -0.17677668F * m[28][3] + 0.17677668F * m[28][4] + -0.17677668F * m[28][5] + 0.17677668F * m[28][6] + -0.17677668F * m[28][7] + 0.17677668F * m[28][8] + -0.17677668F * m[28][9] + 0.17677668F * m[28][10] + -0.17677668F * m[28][11] + 0.17677668F * m[28][12] + -0.17677668F * m[28][13] + 0.17677668F * m[28][14] + -0.17677668F * m[28][15] + 0.17677668F * m[28][16] + -0.17677668F * m[28][17] + 0.17677668F * m[28][18] + -0.17677668F * m[28][19] + 0.17677668F * m[28][20] + -0.17677668F * m[28][21] + 0.17677668F * m[28][22] + -0.17677668F * m[28][23] + 0.17677668F * m[28][24] + -0.17677668F * m[28][25] + 0.17677668F * m[28][26] + -0.17677668F * m[28][27] + 0.17677668F * m[28][28] + -0.17677668F * m[28][29] + 0.17677668F * m[28][30] + -0.17677668F * m[28][31], 0.17677668F * m[29][0] + -0.17677668F * m[29][1] + 0.17677668F * m[29][2] + -0.17677668F * m[29][3] + 0.17677668F * m[29][4] + -0.17677668F * m[29][5] + 0.17677668F * m[29][6] + -0.17677668F * m[29][7] + 0.17677668F * m[29][8] + -0.17677668F * m[29][9] + 0.17677668F * m[29][10] + -0.17677668F * m[29][11] + 0.17677668F * m[29][12] + -0.17677668F * m[29][13] + 0.17677668F * m[29][14] + -0.17677668F * m[29][15] + 0.17677668F * m[29][16] + -0.17677668F * m[29][17] + 0.17677668F * m[29][18] + -0.17677668F * m[29][19] + 0.17677668F * m[29][20] + -0.17677668F * m[29][21] + 0.17677668F * m[29][22] + -0.17677668F * m[29][23] + 0.17677668F * m[29][24] + -0.17677668F * m[29][25] + 0.17677668F * m[29][26] + -0.17677668F * m[29][27] + 0.17677668F * m[29][28] + -0.17677668F * m[29][29] + 0.17677668F * m[29][30] + -0.17677668F * m[29][31], 0.17677668F * m[30][0] + -0.17677668F * m[30][1] + 0.17677668F * m[30][2] + -0.17677668F * m[30][3] + 0.17677668F * m[30][4] + -0.17677668F * m[30][5] + 0.17677668F * m[30][6] + -0.17677668F * m[30][7] + 0.17677668F * m[30][8] + -0.17677668F * m[30][9] + 0.17677668F * m[30][10] + -0.17677668F * m[30][11] + 0.17677668F * m[30][12] + -0.17677668F * m[30][13] + 0.17677668F * m[30][14] + -0.17677668F * m[30][15] + 0.17677668F * m[30][16] + -0.17677668F * m[30][17] + 0.17677668F * m[30][18] + -0.17677668F * m[30][19] + 0.17677668F * m[30][20] + -0.17677668F * m[30][21] + 0.17677668F * m[30][22] + -0.17677668F * m[30][23] + 0.17677668F * m[30][24] + -0.17677668F * m[30][25] + 0.17677668F * m[30][26] + -0.17677668F * m[30][27] + 0.17677668F * m[30][28] + -0.17677668F * m[30][29] + 0.17677668F * m[30][30] + -0.17677668F * m[30][31], 0.17677668F * m[31][0] + -0.17677668F * m[31][1] + 0.17677668F * m[31][2] + -0.17677668F * m[31][3] + 0.17677668F * m[31][4] + -0.17677668F * m[31][5] + 0.17677668F * m[31][6] + -0.17677668F * m[31][7] + 0.17677668F * m[31][8] + -0.17677668F * m[31][9] + 0.17677668F * m[31][10] + -0.17677668F * m[31][11] + 0.17677668F * m[31][12] + -0.17677668F * m[31][13] + 0.17677668F * m[31][14] + -0.17677668F * m[31][15] + 0.17677668F * m[31][16] + -0.17677668F * m[31][17] + 0.17677668F * m[31][18] + -0.17677668F * m[31][19] + 0.17677668F * m[31][20] + -0.17677668F * m[31][21] + 0.17677668F * m[31][22] + -0.17677668F * m[31][23] + 0.17677668F * m[31][24] + -0.17677668F * m[31][25] + 0.17677668F * m[31][26] + -0.17677668F * m[31][27] + 0.17677668F * m[31][28] + -0.17677668F * m[31][29] + 0.17677668F * m[31][30] + -0.17677668F * m[31][31]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[18], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[19], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[18], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[19], 0.70710677F * q_state_0[20] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[21] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[20] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[21] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[24] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[25] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[24] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[25] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[28] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[29] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[28] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[29] + -0.70710677F * q_state_0[31]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[20], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[21], 0.70710677F * q_state_0[18] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[19] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[20], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[21], 0.70710677F * q_state_0[18] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[19] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[24] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[25] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[26] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[27] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[24] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[25] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[26] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[27] + -0.70710677F * q_state_0[31]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[24], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[25], 0.70710677F * q_state_0[18] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[19] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[20] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[21] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[22] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[23] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[24], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[25], 0.70710677F * q_state_0[18] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[19] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[20] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[21] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[22] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[23] + -0.70710677F * q_state_0[31]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[16], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[17], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[18], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[19], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[20], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[21], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[24], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[25], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[14] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[15] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[16], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[17], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[18], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[19], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[20], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[21], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[24], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[25], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[14] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[15] + -0.70710677F * q_state_0[31]};
    q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
    boolean $$_tmp_measureVar8;
    if (q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
      $$_tmp_measureVar8 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar8 = false;
    }
    boolean $$_tmp_measureVar9;
    if (q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
      $$_tmp_measureVar9 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar9 = false;
    }
    boolean $$_tmp_measureVar10;
    if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27]) {
      q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
      q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
      $$_tmp_measureVar10 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], 0.0F, 0.0F, 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], 0.0F, 0.0F, 0.0F, 0.0F};
      $$_tmp_measureVar10 = false;
    }
    boolean $$_tmp_measureVar11;
    if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29]) {
      q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7], 0.0F, 0.0F, q_state_0[10], q_state_0[11], 0.0F, 0.0F, q_state_0[14], q_state_0[15], 0.0F, 0.0F, q_state_0[18], q_state_0[19], 0.0F, 0.0F, q_state_0[22], q_state_0[23], 0.0F, 0.0F, q_state_0[26], q_state_0[27], 0.0F, 0.0F, q_state_0[30], q_state_0[31]};
      q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7], 0.0F, 0.0F, q_state_1[10], q_state_1[11], 0.0F, 0.0F, q_state_1[14], q_state_1[15], 0.0F, 0.0F, q_state_1[18], q_state_1[19], 0.0F, 0.0F, q_state_1[22], q_state_1[23], 0.0F, 0.0F, q_state_1[26], q_state_1[27], 0.0F, 0.0F, q_state_1[30], q_state_1[31]};
      $$_tmp_measureVar11 = true;
    } else {
      q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F, q_state_0[8], q_state_0[9], 0.0F, 0.0F, q_state_0[12], q_state_0[13], 0.0F, 0.0F, q_state_0[16], q_state_0[17], 0.0F, 0.0F, q_state_0[20], q_state_0[21], 0.0F, 0.0F, q_state_0[24], q_state_0[25], 0.0F, 0.0F, q_state_0[28], q_state_0[29], 0.0F, 0.0F};
      q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F, q_state_1[8], q_state_1[9], 0.0F, 0.0F, q_state_1[12], q_state_1[13], 0.0F, 0.0F, q_state_1[16], q_state_1[17], 0.0F, 0.0F, q_state_1[20], q_state_1[21], 0.0F, 0.0F, q_state_1[24], q_state_1[25], 0.0F, 0.0F, q_state_1[28], q_state_1[29], 0.0F, 0.0F};
      $$_tmp_measureVar11 = false;
    }
    return $$_tmp_measureVar8 || $$_tmp_measureVar9 || $$_tmp_measureVar10 || $$_tmp_measureVar11;
  }
  
  /*@ pure */ 
  public static int count(/*@ non_null */ 
  boolean[] f) {
    int i = 0;
    for (int j = 0; j < f.length; j++) {
      if (f[j]) {
        ++i;
      }
    }
    return i;
  }
}