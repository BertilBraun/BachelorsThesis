public class Deutsch {

    public Deutsch() {
        super();
    }
    /*@
      requires f != null && f.length == 2;
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2;
      ensures \result <==> (count(f) == f.length / 2);
   */

    public static boolean isBalanced1Bit(/*@ non_null */
            boolean[] f) {
        if (f == null || f.length != 2) {
            throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
        }
        /*@ non_null */
        final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F}};
        float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F};
        float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.49999997F * m[0][0] + -0.49999997F * m[0][1] + 0.49999997F * m[0][2] + -0.49999997F * m[0][3], 0.49999997F * m[1][0] + -0.49999997F * m[1][1] + 0.49999997F * m[1][2] + -0.49999997F * m[1][3], 0.49999997F * m[2][0] + -0.49999997F * m[2][1] + 0.49999997F * m[2][2] + -0.49999997F * m[2][3], 0.49999997F * m[3][0] + -0.49999997F * m[3][1] + 0.49999997F * m[3][2] + -0.49999997F * m[3][3]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F};
        boolean $$_tmp_measureVar1;
        if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1]) {
            q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3]};
            q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3]};
            $$_tmp_measureVar1 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F};
            $$_tmp_measureVar1 = false;
        }
        return $$_tmp_measureVar1;
    }
    /*@
      requires f != null && f.length == 4;
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2;
      ensures \result <==> (count(f) == f.length / 2);
   */

    public static boolean isBalanced2Bit(/*@ non_null */
            boolean[] f) {
        if (f == null || f.length != 4) {
            throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
        }
        /*@ non_null */
        final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F}};
        float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.35355335F * m[0][0] + -0.35355335F * m[0][1] + 0.35355335F * m[0][2] + -0.35355335F * m[0][3] + 0.35355335F * m[0][4] + -0.35355335F * m[0][5] + 0.35355335F * m[0][6] + -0.35355335F * m[0][7], 0.35355335F * m[1][0] + -0.35355335F * m[1][1] + 0.35355335F * m[1][2] + -0.35355335F * m[1][3] + 0.35355335F * m[1][4] + -0.35355335F * m[1][5] + 0.35355335F * m[1][6] + -0.35355335F * m[1][7], 0.35355335F * m[2][0] + -0.35355335F * m[2][1] + 0.35355335F * m[2][2] + -0.35355335F * m[2][3] + 0.35355335F * m[2][4] + -0.35355335F * m[2][5] + 0.35355335F * m[2][6] + -0.35355335F * m[2][7], 0.35355335F * m[3][0] + -0.35355335F * m[3][1] + 0.35355335F * m[3][2] + -0.35355335F * m[3][3] + 0.35355335F * m[3][4] + -0.35355335F * m[3][5] + 0.35355335F * m[3][6] + -0.35355335F * m[3][7], 0.35355335F * m[4][0] + -0.35355335F * m[4][1] + 0.35355335F * m[4][2] + -0.35355335F * m[4][3] + 0.35355335F * m[4][4] + -0.35355335F * m[4][5] + 0.35355335F * m[4][6] + -0.35355335F * m[4][7], 0.35355335F * m[5][0] + -0.35355335F * m[5][1] + 0.35355335F * m[5][2] + -0.35355335F * m[5][3] + 0.35355335F * m[5][4] + -0.35355335F * m[5][5] + 0.35355335F * m[5][6] + -0.35355335F * m[5][7], 0.35355335F * m[6][0] + -0.35355335F * m[6][1] + 0.35355335F * m[6][2] + -0.35355335F * m[6][3] + 0.35355335F * m[6][4] + -0.35355335F * m[6][5] + 0.35355335F * m[6][6] + -0.35355335F * m[6][7], 0.35355335F * m[7][0] + -0.35355335F * m[7][1] + 0.35355335F * m[7][2] + -0.35355335F * m[7][3] + 0.35355335F * m[7][4] + -0.35355335F * m[7][5] + 0.35355335F * m[7][6] + -0.35355335F * m[7][7]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        boolean $$_tmp_measureVar2;
        if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7]};
            $$_tmp_measureVar2 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar2 = false;
        }
        boolean $$_tmp_measureVar3;
        if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5]) {
            q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7]};
            q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7]};
            $$_tmp_measureVar3 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F};
            $$_tmp_measureVar3 = false;
        }
        return $$_tmp_measureVar2 || $$_tmp_measureVar3;
    }
    /*@
      requires f != null && f.length == 8;
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2;
      ensures \result <==> (count(f) == f.length / 2);
   */

    public static boolean isBalanced3Bit(/*@ non_null */
            boolean[] f) {
        if (f == null || f.length != 8) {
            throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
        }
        /*@ non_null */
        final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[4] ? 1.0F : 0.0F, f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[4] ? 1.0F : 0.0F, !f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[5] ? 1.0F : 0.0F, f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[5] ? 1.0F : 0.0F, !f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[6] ? 1.0F : 0.0F, f[6] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[6] ? 1.0F : 0.0F, !f[6] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[7] ? 1.0F : 0.0F, f[7] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[7] ? 1.0F : 0.0F, !f[7] ? 1.0F : 0.0F}};
        float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.24999997F * m[0][0] + -0.24999997F * m[0][1] + 0.24999997F * m[0][2] + -0.24999997F * m[0][3] + 0.24999997F * m[0][4] + -0.24999997F * m[0][5] + 0.24999997F * m[0][6] + -0.24999997F * m[0][7] + 0.24999997F * m[0][8] + -0.24999997F * m[0][9] + 0.24999997F * m[0][10] + -0.24999997F * m[0][11] + 0.24999997F * m[0][12] + -0.24999997F * m[0][13] + 0.24999997F * m[0][14] + -0.24999997F * m[0][15], 0.24999997F * m[1][0] + -0.24999997F * m[1][1] + 0.24999997F * m[1][2] + -0.24999997F * m[1][3] + 0.24999997F * m[1][4] + -0.24999997F * m[1][5] + 0.24999997F * m[1][6] + -0.24999997F * m[1][7] + 0.24999997F * m[1][8] + -0.24999997F * m[1][9] + 0.24999997F * m[1][10] + -0.24999997F * m[1][11] + 0.24999997F * m[1][12] + -0.24999997F * m[1][13] + 0.24999997F * m[1][14] + -0.24999997F * m[1][15], 0.24999997F * m[2][0] + -0.24999997F * m[2][1] + 0.24999997F * m[2][2] + -0.24999997F * m[2][3] + 0.24999997F * m[2][4] + -0.24999997F * m[2][5] + 0.24999997F * m[2][6] + -0.24999997F * m[2][7] + 0.24999997F * m[2][8] + -0.24999997F * m[2][9] + 0.24999997F * m[2][10] + -0.24999997F * m[2][11] + 0.24999997F * m[2][12] + -0.24999997F * m[2][13] + 0.24999997F * m[2][14] + -0.24999997F * m[2][15], 0.24999997F * m[3][0] + -0.24999997F * m[3][1] + 0.24999997F * m[3][2] + -0.24999997F * m[3][3] + 0.24999997F * m[3][4] + -0.24999997F * m[3][5] + 0.24999997F * m[3][6] + -0.24999997F * m[3][7] + 0.24999997F * m[3][8] + -0.24999997F * m[3][9] + 0.24999997F * m[3][10] + -0.24999997F * m[3][11] + 0.24999997F * m[3][12] + -0.24999997F * m[3][13] + 0.24999997F * m[3][14] + -0.24999997F * m[3][15], 0.24999997F * m[4][0] + -0.24999997F * m[4][1] + 0.24999997F * m[4][2] + -0.24999997F * m[4][3] + 0.24999997F * m[4][4] + -0.24999997F * m[4][5] + 0.24999997F * m[4][6] + -0.24999997F * m[4][7] + 0.24999997F * m[4][8] + -0.24999997F * m[4][9] + 0.24999997F * m[4][10] + -0.24999997F * m[4][11] + 0.24999997F * m[4][12] + -0.24999997F * m[4][13] + 0.24999997F * m[4][14] + -0.24999997F * m[4][15], 0.24999997F * m[5][0] + -0.24999997F * m[5][1] + 0.24999997F * m[5][2] + -0.24999997F * m[5][3] + 0.24999997F * m[5][4] + -0.24999997F * m[5][5] + 0.24999997F * m[5][6] + -0.24999997F * m[5][7] + 0.24999997F * m[5][8] + -0.24999997F * m[5][9] + 0.24999997F * m[5][10] + -0.24999997F * m[5][11] + 0.24999997F * m[5][12] + -0.24999997F * m[5][13] + 0.24999997F * m[5][14] + -0.24999997F * m[5][15], 0.24999997F * m[6][0] + -0.24999997F * m[6][1] + 0.24999997F * m[6][2] + -0.24999997F * m[6][3] + 0.24999997F * m[6][4] + -0.24999997F * m[6][5] + 0.24999997F * m[6][6] + -0.24999997F * m[6][7] + 0.24999997F * m[6][8] + -0.24999997F * m[6][9] + 0.24999997F * m[6][10] + -0.24999997F * m[6][11] + 0.24999997F * m[6][12] + -0.24999997F * m[6][13] + 0.24999997F * m[6][14] + -0.24999997F * m[6][15], 0.24999997F * m[7][0] + -0.24999997F * m[7][1] + 0.24999997F * m[7][2] + -0.24999997F * m[7][3] + 0.24999997F * m[7][4] + -0.24999997F * m[7][5] + 0.24999997F * m[7][6] + -0.24999997F * m[7][7] + 0.24999997F * m[7][8] + -0.24999997F * m[7][9] + 0.24999997F * m[7][10] + -0.24999997F * m[7][11] + 0.24999997F * m[7][12] + -0.24999997F * m[7][13] + 0.24999997F * m[7][14] + -0.24999997F * m[7][15], 0.24999997F * m[8][0] + -0.24999997F * m[8][1] + 0.24999997F * m[8][2] + -0.24999997F * m[8][3] + 0.24999997F * m[8][4] + -0.24999997F * m[8][5] + 0.24999997F * m[8][6] + -0.24999997F * m[8][7] + 0.24999997F * m[8][8] + -0.24999997F * m[8][9] + 0.24999997F * m[8][10] + -0.24999997F * m[8][11] + 0.24999997F * m[8][12] + -0.24999997F * m[8][13] + 0.24999997F * m[8][14] + -0.24999997F * m[8][15], 0.24999997F * m[9][0] + -0.24999997F * m[9][1] + 0.24999997F * m[9][2] + -0.24999997F * m[9][3] + 0.24999997F * m[9][4] + -0.24999997F * m[9][5] + 0.24999997F * m[9][6] + -0.24999997F * m[9][7] + 0.24999997F * m[9][8] + -0.24999997F * m[9][9] + 0.24999997F * m[9][10] + -0.24999997F * m[9][11] + 0.24999997F * m[9][12] + -0.24999997F * m[9][13] + 0.24999997F * m[9][14] + -0.24999997F * m[9][15], 0.24999997F * m[10][0] + -0.24999997F * m[10][1] + 0.24999997F * m[10][2] + -0.24999997F * m[10][3] + 0.24999997F * m[10][4] + -0.24999997F * m[10][5] + 0.24999997F * m[10][6] + -0.24999997F * m[10][7] + 0.24999997F * m[10][8] + -0.24999997F * m[10][9] + 0.24999997F * m[10][10] + -0.24999997F * m[10][11] + 0.24999997F * m[10][12] + -0.24999997F * m[10][13] + 0.24999997F * m[10][14] + -0.24999997F * m[10][15], 0.24999997F * m[11][0] + -0.24999997F * m[11][1] + 0.24999997F * m[11][2] + -0.24999997F * m[11][3] + 0.24999997F * m[11][4] + -0.24999997F * m[11][5] + 0.24999997F * m[11][6] + -0.24999997F * m[11][7] + 0.24999997F * m[11][8] + -0.24999997F * m[11][9] + 0.24999997F * m[11][10] + -0.24999997F * m[11][11] + 0.24999997F * m[11][12] + -0.24999997F * m[11][13] + 0.24999997F * m[11][14] + -0.24999997F * m[11][15], 0.24999997F * m[12][0] + -0.24999997F * m[12][1] + 0.24999997F * m[12][2] + -0.24999997F * m[12][3] + 0.24999997F * m[12][4] + -0.24999997F * m[12][5] + 0.24999997F * m[12][6] + -0.24999997F * m[12][7] + 0.24999997F * m[12][8] + -0.24999997F * m[12][9] + 0.24999997F * m[12][10] + -0.24999997F * m[12][11] + 0.24999997F * m[12][12] + -0.24999997F * m[12][13] + 0.24999997F * m[12][14] + -0.24999997F * m[12][15], 0.24999997F * m[13][0] + -0.24999997F * m[13][1] + 0.24999997F * m[13][2] + -0.24999997F * m[13][3] + 0.24999997F * m[13][4] + -0.24999997F * m[13][5] + 0.24999997F * m[13][6] + -0.24999997F * m[13][7] + 0.24999997F * m[13][8] + -0.24999997F * m[13][9] + 0.24999997F * m[13][10] + -0.24999997F * m[13][11] + 0.24999997F * m[13][12] + -0.24999997F * m[13][13] + 0.24999997F * m[13][14] + -0.24999997F * m[13][15], 0.24999997F * m[14][0] + -0.24999997F * m[14][1] + 0.24999997F * m[14][2] + -0.24999997F * m[14][3] + 0.24999997F * m[14][4] + -0.24999997F * m[14][5] + 0.24999997F * m[14][6] + -0.24999997F * m[14][7] + 0.24999997F * m[14][8] + -0.24999997F * m[14][9] + 0.24999997F * m[14][10] + -0.24999997F * m[14][11] + 0.24999997F * m[14][12] + -0.24999997F * m[14][13] + 0.24999997F * m[14][14] + -0.24999997F * m[14][15], 0.24999997F * m[15][0] + -0.24999997F * m[15][1] + 0.24999997F * m[15][2] + -0.24999997F * m[15][3] + 0.24999997F * m[15][4] + -0.24999997F * m[15][5] + 0.24999997F * m[15][6] + -0.24999997F * m[15][7] + 0.24999997F * m[15][8] + -0.24999997F * m[15][9] + 0.24999997F * m[15][10] + -0.24999997F * m[15][11] + 0.24999997F * m[15][12] + -0.24999997F * m[15][13] + 0.24999997F * m[15][14] + -0.24999997F * m[15][15]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[15]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[15]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[15]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        boolean $$_tmp_measureVar4;
        if (q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
            $$_tmp_measureVar4 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar4 = false;
        }
        boolean $$_tmp_measureVar5;
        if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15]};
            $$_tmp_measureVar5 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar5 = false;
        }
        boolean $$_tmp_measureVar6;
        if (q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13]) {
            q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7], 0.0F, 0.0F, q_state_0[10], q_state_0[11], 0.0F, 0.0F, q_state_0[14], q_state_0[15]};
            q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7], 0.0F, 0.0F, q_state_1[10], q_state_1[11], 0.0F, 0.0F, q_state_1[14], q_state_1[15]};
            $$_tmp_measureVar6 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F, q_state_0[8], q_state_0[9], 0.0F, 0.0F, q_state_0[12], q_state_0[13], 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F, q_state_1[8], q_state_1[9], 0.0F, 0.0F, q_state_1[12], q_state_1[13], 0.0F, 0.0F};
            $$_tmp_measureVar6 = false;
        }
        return $$_tmp_measureVar4 || $$_tmp_measureVar5 || $$_tmp_measureVar6;
    }
    /*@
      requires f != null && f.length == 16;
      requires (\forall int i; 0 <= i && i < f.length; f[i]) || (\forall int j; 0 <= j && j < f.length; !f[j]) || count(f) == f.length / 2;
      ensures \result <==> (count(f) == f.length / 2);
   */

    public static boolean isBalanced4Bit(/*@ non_null */
            boolean[] f, boolean $$_tmp_measureParam0) {
        if (f == null || f.length != 16) {
            throw new IllegalArgumentException("Input for Deutschalgorithm has to be boolean array of size 2 ** n.");
        }
        /*@ non_null */
        final float[][] m = new float[][]{new float[]{!f[0] ? 1.0F : 0.0F, f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{f[0] ? 1.0F : 0.0F, !f[0] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, !f[1] ? 1.0F : 0.0F, f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, f[1] ? 1.0F : 0.0F, !f[1] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, !f[2] ? 1.0F : 0.0F, f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, f[2] ? 1.0F : 0.0F, !f[2] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[3] ? 1.0F : 0.0F, f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[3] ? 1.0F : 0.0F, !f[3] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[4] ? 1.0F : 0.0F, f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[4] ? 1.0F : 0.0F, !f[4] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[5] ? 1.0F : 0.0F, f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[5] ? 1.0F : 0.0F, !f[5] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[6] ? 1.0F : 0.0F, f[6] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[6] ? 1.0F : 0.0F, !f[6] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[7] ? 1.0F : 0.0F, f[7] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[7] ? 1.0F : 0.0F, !f[7] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[8] ? 1.0F : 0.0F, f[8] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[8] ? 1.0F : 0.0F, !f[8] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[9] ? 1.0F : 0.0F, f[9] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[9] ? 1.0F : 0.0F, !f[9] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[10] ? 1.0F : 0.0F, f[10] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[10] ? 1.0F : 0.0F, !f[10] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[11] ? 1.0F : 0.0F, f[11] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[11] ? 1.0F : 0.0F, !f[11] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[12] ? 1.0F : 0.0F, f[12] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[12] ? 1.0F : 0.0F, !f[12] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[13] ? 1.0F : 0.0F, f[13] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[13] ? 1.0F : 0.0F, !f[13] ? 1.0F : 0.0F, 0.0F, 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[14] ? 1.0F : 0.0F, f[14] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[14] ? 1.0F : 0.0F, !f[14] ? 1.0F : 0.0F, 0.0F, 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, !f[15] ? 1.0F : 0.0F, f[15] ? 1.0F : 0.0F}, new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, f[15] ? 1.0F : 0.0F, !f[15] ? 1.0F : 0.0F}};
        float[] q_state_0 = new float[]{1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        float[] q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F, -0.70710677F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.49999997F, -0.49999997F, 0.49999997F, -0.49999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.35355335F, -0.35355335F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.24999997F, -0.24999997F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F, 0.17677668F, -0.17677668F};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.17677668F * m[0][0] + 0.17677668F * m[0][1] + 0.17677668F * m[0][2] + 0.17677668F * m[0][3] + 0.17677668F * m[0][4] + 0.17677668F * m[0][5] + 0.17677668F * m[0][6] + 0.17677668F * m[0][7] + 0.17677668F * m[0][8] + 0.17677668F * m[0][9] + 0.17677668F * m[0][10] + 0.17677668F * m[0][11] + 0.17677668F * m[0][12] + 0.17677668F * m[0][13] + 0.17677668F * m[0][14] + 0.17677668F * m[0][15], -0.17677668F * m[0][0] + -0.17677668F * m[0][1] + -0.17677668F * m[0][2] + -0.17677668F * m[0][3] + -0.17677668F * m[0][4] + -0.17677668F * m[0][5] + -0.17677668F * m[0][6] + -0.17677668F * m[0][7] + -0.17677668F * m[0][8] + -0.17677668F * m[0][9] + -0.17677668F * m[0][10] + -0.17677668F * m[0][11] + -0.17677668F * m[0][12] + -0.17677668F * m[0][13] + -0.17677668F * m[0][14] + -0.17677668F * m[0][15], 0.17677668F * m[1][0] + 0.17677668F * m[1][1] + 0.17677668F * m[1][2] + 0.17677668F * m[1][3] + 0.17677668F * m[1][4] + 0.17677668F * m[1][5] + 0.17677668F * m[1][6] + 0.17677668F * m[1][7] + 0.17677668F * m[1][8] + 0.17677668F * m[1][9] + 0.17677668F * m[1][10] + 0.17677668F * m[1][11] + 0.17677668F * m[1][12] + 0.17677668F * m[1][13] + 0.17677668F * m[1][14] + 0.17677668F * m[1][15], -0.17677668F * m[1][0] + -0.17677668F * m[1][1] + -0.17677668F * m[1][2] + -0.17677668F * m[1][3] + -0.17677668F * m[1][4] + -0.17677668F * m[1][5] + -0.17677668F * m[1][6] + -0.17677668F * m[1][7] + -0.17677668F * m[1][8] + -0.17677668F * m[1][9] + -0.17677668F * m[1][10] + -0.17677668F * m[1][11] + -0.17677668F * m[1][12] + -0.17677668F * m[1][13] + -0.17677668F * m[1][14] + -0.17677668F * m[1][15], 0.17677668F * m[2][0] + 0.17677668F * m[2][1] + 0.17677668F * m[2][2] + 0.17677668F * m[2][3] + 0.17677668F * m[2][4] + 0.17677668F * m[2][5] + 0.17677668F * m[2][6] + 0.17677668F * m[2][7] + 0.17677668F * m[2][8] + 0.17677668F * m[2][9] + 0.17677668F * m[2][10] + 0.17677668F * m[2][11] + 0.17677668F * m[2][12] + 0.17677668F * m[2][13] + 0.17677668F * m[2][14] + 0.17677668F * m[2][15], -0.17677668F * m[2][0] + -0.17677668F * m[2][1] + -0.17677668F * m[2][2] + -0.17677668F * m[2][3] + -0.17677668F * m[2][4] + -0.17677668F * m[2][5] + -0.17677668F * m[2][6] + -0.17677668F * m[2][7] + -0.17677668F * m[2][8] + -0.17677668F * m[2][9] + -0.17677668F * m[2][10] + -0.17677668F * m[2][11] + -0.17677668F * m[2][12] + -0.17677668F * m[2][13] + -0.17677668F * m[2][14] + -0.17677668F * m[2][15], 0.17677668F * m[3][0] + 0.17677668F * m[3][1] + 0.17677668F * m[3][2] + 0.17677668F * m[3][3] + 0.17677668F * m[3][4] + 0.17677668F * m[3][5] + 0.17677668F * m[3][6] + 0.17677668F * m[3][7] + 0.17677668F * m[3][8] + 0.17677668F * m[3][9] + 0.17677668F * m[3][10] + 0.17677668F * m[3][11] + 0.17677668F * m[3][12] + 0.17677668F * m[3][13] + 0.17677668F * m[3][14] + 0.17677668F * m[3][15], -0.17677668F * m[3][0] + -0.17677668F * m[3][1] + -0.17677668F * m[3][2] + -0.17677668F * m[3][3] + -0.17677668F * m[3][4] + -0.17677668F * m[3][5] + -0.17677668F * m[3][6] + -0.17677668F * m[3][7] + -0.17677668F * m[3][8] + -0.17677668F * m[3][9] + -0.17677668F * m[3][10] + -0.17677668F * m[3][11] + -0.17677668F * m[3][12] + -0.17677668F * m[3][13] + -0.17677668F * m[3][14] + -0.17677668F * m[3][15], 0.17677668F * m[4][0] + 0.17677668F * m[4][1] + 0.17677668F * m[4][2] + 0.17677668F * m[4][3] + 0.17677668F * m[4][4] + 0.17677668F * m[4][5] + 0.17677668F * m[4][6] + 0.17677668F * m[4][7] + 0.17677668F * m[4][8] + 0.17677668F * m[4][9] + 0.17677668F * m[4][10] + 0.17677668F * m[4][11] + 0.17677668F * m[4][12] + 0.17677668F * m[4][13] + 0.17677668F * m[4][14] + 0.17677668F * m[4][15], -0.17677668F * m[4][0] + -0.17677668F * m[4][1] + -0.17677668F * m[4][2] + -0.17677668F * m[4][3] + -0.17677668F * m[4][4] + -0.17677668F * m[4][5] + -0.17677668F * m[4][6] + -0.17677668F * m[4][7] + -0.17677668F * m[4][8] + -0.17677668F * m[4][9] + -0.17677668F * m[4][10] + -0.17677668F * m[4][11] + -0.17677668F * m[4][12] + -0.17677668F * m[4][13] + -0.17677668F * m[4][14] + -0.17677668F * m[4][15], 0.17677668F * m[5][0] + 0.17677668F * m[5][1] + 0.17677668F * m[5][2] + 0.17677668F * m[5][3] + 0.17677668F * m[5][4] + 0.17677668F * m[5][5] + 0.17677668F * m[5][6] + 0.17677668F * m[5][7] + 0.17677668F * m[5][8] + 0.17677668F * m[5][9] + 0.17677668F * m[5][10] + 0.17677668F * m[5][11] + 0.17677668F * m[5][12] + 0.17677668F * m[5][13] + 0.17677668F * m[5][14] + 0.17677668F * m[5][15], -0.17677668F * m[5][0] + -0.17677668F * m[5][1] + -0.17677668F * m[5][2] + -0.17677668F * m[5][3] + -0.17677668F * m[5][4] + -0.17677668F * m[5][5] + -0.17677668F * m[5][6] + -0.17677668F * m[5][7] + -0.17677668F * m[5][8] + -0.17677668F * m[5][9] + -0.17677668F * m[5][10] + -0.17677668F * m[5][11] + -0.17677668F * m[5][12] + -0.17677668F * m[5][13] + -0.17677668F * m[5][14] + -0.17677668F * m[5][15], 0.17677668F * m[6][0] + 0.17677668F * m[6][1] + 0.17677668F * m[6][2] + 0.17677668F * m[6][3] + 0.17677668F * m[6][4] + 0.17677668F * m[6][5] + 0.17677668F * m[6][6] + 0.17677668F * m[6][7] + 0.17677668F * m[6][8] + 0.17677668F * m[6][9] + 0.17677668F * m[6][10] + 0.17677668F * m[6][11] + 0.17677668F * m[6][12] + 0.17677668F * m[6][13] + 0.17677668F * m[6][14] + 0.17677668F * m[6][15], -0.17677668F * m[6][0] + -0.17677668F * m[6][1] + -0.17677668F * m[6][2] + -0.17677668F * m[6][3] + -0.17677668F * m[6][4] + -0.17677668F * m[6][5] + -0.17677668F * m[6][6] + -0.17677668F * m[6][7] + -0.17677668F * m[6][8] + -0.17677668F * m[6][9] + -0.17677668F * m[6][10] + -0.17677668F * m[6][11] + -0.17677668F * m[6][12] + -0.17677668F * m[6][13] + -0.17677668F * m[6][14] + -0.17677668F * m[6][15], 0.17677668F * m[7][0] + 0.17677668F * m[7][1] + 0.17677668F * m[7][2] + 0.17677668F * m[7][3] + 0.17677668F * m[7][4] + 0.17677668F * m[7][5] + 0.17677668F * m[7][6] + 0.17677668F * m[7][7] + 0.17677668F * m[7][8] + 0.17677668F * m[7][9] + 0.17677668F * m[7][10] + 0.17677668F * m[7][11] + 0.17677668F * m[7][12] + 0.17677668F * m[7][13] + 0.17677668F * m[7][14] + 0.17677668F * m[7][15], -0.17677668F * m[7][0] + -0.17677668F * m[7][1] + -0.17677668F * m[7][2] + -0.17677668F * m[7][3] + -0.17677668F * m[7][4] + -0.17677668F * m[7][5] + -0.17677668F * m[7][6] + -0.17677668F * m[7][7] + -0.17677668F * m[7][8] + -0.17677668F * m[7][9] + -0.17677668F * m[7][10] + -0.17677668F * m[7][11] + -0.17677668F * m[7][12] + -0.17677668F * m[7][13] + -0.17677668F * m[7][14] + -0.17677668F * m[7][15], 0.17677668F * m[8][0] + 0.17677668F * m[8][1] + 0.17677668F * m[8][2] + 0.17677668F * m[8][3] + 0.17677668F * m[8][4] + 0.17677668F * m[8][5] + 0.17677668F * m[8][6] + 0.17677668F * m[8][7] + 0.17677668F * m[8][8] + 0.17677668F * m[8][9] + 0.17677668F * m[8][10] + 0.17677668F * m[8][11] + 0.17677668F * m[8][12] + 0.17677668F * m[8][13] + 0.17677668F * m[8][14] + 0.17677668F * m[8][15], -0.17677668F * m[8][0] + -0.17677668F * m[8][1] + -0.17677668F * m[8][2] + -0.17677668F * m[8][3] + -0.17677668F * m[8][4] + -0.17677668F * m[8][5] + -0.17677668F * m[8][6] + -0.17677668F * m[8][7] + -0.17677668F * m[8][8] + -0.17677668F * m[8][9] + -0.17677668F * m[8][10] + -0.17677668F * m[8][11] + -0.17677668F * m[8][12] + -0.17677668F * m[8][13] + -0.17677668F * m[8][14] + -0.17677668F * m[8][15], 0.17677668F * m[9][0] + 0.17677668F * m[9][1] + 0.17677668F * m[9][2] + 0.17677668F * m[9][3] + 0.17677668F * m[9][4] + 0.17677668F * m[9][5] + 0.17677668F * m[9][6] + 0.17677668F * m[9][7] + 0.17677668F * m[9][8] + 0.17677668F * m[9][9] + 0.17677668F * m[9][10] + 0.17677668F * m[9][11] + 0.17677668F * m[9][12] + 0.17677668F * m[9][13] + 0.17677668F * m[9][14] + 0.17677668F * m[9][15], -0.17677668F * m[9][0] + -0.17677668F * m[9][1] + -0.17677668F * m[9][2] + -0.17677668F * m[9][3] + -0.17677668F * m[9][4] + -0.17677668F * m[9][5] + -0.17677668F * m[9][6] + -0.17677668F * m[9][7] + -0.17677668F * m[9][8] + -0.17677668F * m[9][9] + -0.17677668F * m[9][10] + -0.17677668F * m[9][11] + -0.17677668F * m[9][12] + -0.17677668F * m[9][13] + -0.17677668F * m[9][14] + -0.17677668F * m[9][15], 0.17677668F * m[10][0] + 0.17677668F * m[10][1] + 0.17677668F * m[10][2] + 0.17677668F * m[10][3] + 0.17677668F * m[10][4] + 0.17677668F * m[10][5] + 0.17677668F * m[10][6] + 0.17677668F * m[10][7] + 0.17677668F * m[10][8] + 0.17677668F * m[10][9] + 0.17677668F * m[10][10] + 0.17677668F * m[10][11] + 0.17677668F * m[10][12] + 0.17677668F * m[10][13] + 0.17677668F * m[10][14] + 0.17677668F * m[10][15], -0.17677668F * m[10][0] + -0.17677668F * m[10][1] + -0.17677668F * m[10][2] + -0.17677668F * m[10][3] + -0.17677668F * m[10][4] + -0.17677668F * m[10][5] + -0.17677668F * m[10][6] + -0.17677668F * m[10][7] + -0.17677668F * m[10][8] + -0.17677668F * m[10][9] + -0.17677668F * m[10][10] + -0.17677668F * m[10][11] + -0.17677668F * m[10][12] + -0.17677668F * m[10][13] + -0.17677668F * m[10][14] + -0.17677668F * m[10][15], 0.17677668F * m[11][0] + 0.17677668F * m[11][1] + 0.17677668F * m[11][2] + 0.17677668F * m[11][3] + 0.17677668F * m[11][4] + 0.17677668F * m[11][5] + 0.17677668F * m[11][6] + 0.17677668F * m[11][7] + 0.17677668F * m[11][8] + 0.17677668F * m[11][9] + 0.17677668F * m[11][10] + 0.17677668F * m[11][11] + 0.17677668F * m[11][12] + 0.17677668F * m[11][13] + 0.17677668F * m[11][14] + 0.17677668F * m[11][15], -0.17677668F * m[11][0] + -0.17677668F * m[11][1] + -0.17677668F * m[11][2] + -0.17677668F * m[11][3] + -0.17677668F * m[11][4] + -0.17677668F * m[11][5] + -0.17677668F * m[11][6] + -0.17677668F * m[11][7] + -0.17677668F * m[11][8] + -0.17677668F * m[11][9] + -0.17677668F * m[11][10] + -0.17677668F * m[11][11] + -0.17677668F * m[11][12] + -0.17677668F * m[11][13] + -0.17677668F * m[11][14] + -0.17677668F * m[11][15], 0.17677668F * m[12][0] + 0.17677668F * m[12][1] + 0.17677668F * m[12][2] + 0.17677668F * m[12][3] + 0.17677668F * m[12][4] + 0.17677668F * m[12][5] + 0.17677668F * m[12][6] + 0.17677668F * m[12][7] + 0.17677668F * m[12][8] + 0.17677668F * m[12][9] + 0.17677668F * m[12][10] + 0.17677668F * m[12][11] + 0.17677668F * m[12][12] + 0.17677668F * m[12][13] + 0.17677668F * m[12][14] + 0.17677668F * m[12][15], -0.17677668F * m[12][0] + -0.17677668F * m[12][1] + -0.17677668F * m[12][2] + -0.17677668F * m[12][3] + -0.17677668F * m[12][4] + -0.17677668F * m[12][5] + -0.17677668F * m[12][6] + -0.17677668F * m[12][7] + -0.17677668F * m[12][8] + -0.17677668F * m[12][9] + -0.17677668F * m[12][10] + -0.17677668F * m[12][11] + -0.17677668F * m[12][12] + -0.17677668F * m[12][13] + -0.17677668F * m[12][14] + -0.17677668F * m[12][15], 0.17677668F * m[13][0] + 0.17677668F * m[13][1] + 0.17677668F * m[13][2] + 0.17677668F * m[13][3] + 0.17677668F * m[13][4] + 0.17677668F * m[13][5] + 0.17677668F * m[13][6] + 0.17677668F * m[13][7] + 0.17677668F * m[13][8] + 0.17677668F * m[13][9] + 0.17677668F * m[13][10] + 0.17677668F * m[13][11] + 0.17677668F * m[13][12] + 0.17677668F * m[13][13] + 0.17677668F * m[13][14] + 0.17677668F * m[13][15], -0.17677668F * m[13][0] + -0.17677668F * m[13][1] + -0.17677668F * m[13][2] + -0.17677668F * m[13][3] + -0.17677668F * m[13][4] + -0.17677668F * m[13][5] + -0.17677668F * m[13][6] + -0.17677668F * m[13][7] + -0.17677668F * m[13][8] + -0.17677668F * m[13][9] + -0.17677668F * m[13][10] + -0.17677668F * m[13][11] + -0.17677668F * m[13][12] + -0.17677668F * m[13][13] + -0.17677668F * m[13][14] + -0.17677668F * m[13][15], 0.17677668F * m[14][0] + 0.17677668F * m[14][1] + 0.17677668F * m[14][2] + 0.17677668F * m[14][3] + 0.17677668F * m[14][4] + 0.17677668F * m[14][5] + 0.17677668F * m[14][6] + 0.17677668F * m[14][7] + 0.17677668F * m[14][8] + 0.17677668F * m[14][9] + 0.17677668F * m[14][10] + 0.17677668F * m[14][11] + 0.17677668F * m[14][12] + 0.17677668F * m[14][13] + 0.17677668F * m[14][14] + 0.17677668F * m[14][15], -0.17677668F * m[14][0] + -0.17677668F * m[14][1] + -0.17677668F * m[14][2] + -0.17677668F * m[14][3] + -0.17677668F * m[14][4] + -0.17677668F * m[14][5] + -0.17677668F * m[14][6] + -0.17677668F * m[14][7] + -0.17677668F * m[14][8] + -0.17677668F * m[14][9] + -0.17677668F * m[14][10] + -0.17677668F * m[14][11] + -0.17677668F * m[14][12] + -0.17677668F * m[14][13] + -0.17677668F * m[14][14] + -0.17677668F * m[14][15], 0.17677668F * m[15][0] + 0.17677668F * m[15][1] + 0.17677668F * m[15][2] + 0.17677668F * m[15][3] + 0.17677668F * m[15][4] + 0.17677668F * m[15][5] + 0.17677668F * m[15][6] + 0.17677668F * m[15][7] + 0.17677668F * m[15][8] + 0.17677668F * m[15][9] + 0.17677668F * m[15][10] + 0.17677668F * m[15][11] + 0.17677668F * m[15][12] + 0.17677668F * m[15][13] + 0.17677668F * m[15][14] + 0.17677668F * m[15][15], -0.17677668F * m[15][0] + -0.17677668F * m[15][1] + -0.17677668F * m[15][2] + -0.17677668F * m[15][3] + -0.17677668F * m[15][4] + -0.17677668F * m[15][5] + -0.17677668F * m[15][6] + -0.17677668F * m[15][7] + -0.17677668F * m[15][8] + -0.17677668F * m[15][9] + -0.17677668F * m[15][10] + -0.17677668F * m[15][11] + -0.17677668F * m[15][12] + -0.17677668F * m[15][13] + -0.17677668F * m[15][14] + -0.17677668F * m[15][15]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[3], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[2], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[3], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[18], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[19], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[18], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[19], 0.70710677F * q_state_0[20] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[21] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[20] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[21] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[24] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[25] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[24] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[25] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[28] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[29] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[28] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[29] + -0.70710677F * q_state_0[31]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[7], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[4], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[5], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[6], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[7], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[20], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[21], 0.70710677F * q_state_0[18] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[19] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[20], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[21], 0.70710677F * q_state_0[18] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[19] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[24] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[25] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[26] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[27] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[24] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[25] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[26] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[27] + -0.70710677F * q_state_0[31]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[15], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[8], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[9], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[10], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[11], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[12], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[13], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[14], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[15], 0.70710677F * q_state_0[16] + 0.70710677F * q_state_0[24], 0.70710677F * q_state_0[17] + 0.70710677F * q_state_0[25], 0.70710677F * q_state_0[18] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[19] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[20] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[21] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[22] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[23] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[16] + -0.70710677F * q_state_0[24], 0.70710677F * q_state_0[17] + -0.70710677F * q_state_0[25], 0.70710677F * q_state_0[18] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[19] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[20] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[21] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[22] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[23] + -0.70710677F * q_state_0[31]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        q_state_0 = new float[]{0.70710677F * q_state_0[0] + 0.70710677F * q_state_0[16], 0.70710677F * q_state_0[1] + 0.70710677F * q_state_0[17], 0.70710677F * q_state_0[2] + 0.70710677F * q_state_0[18], 0.70710677F * q_state_0[3] + 0.70710677F * q_state_0[19], 0.70710677F * q_state_0[4] + 0.70710677F * q_state_0[20], 0.70710677F * q_state_0[5] + 0.70710677F * q_state_0[21], 0.70710677F * q_state_0[6] + 0.70710677F * q_state_0[22], 0.70710677F * q_state_0[7] + 0.70710677F * q_state_0[23], 0.70710677F * q_state_0[8] + 0.70710677F * q_state_0[24], 0.70710677F * q_state_0[9] + 0.70710677F * q_state_0[25], 0.70710677F * q_state_0[10] + 0.70710677F * q_state_0[26], 0.70710677F * q_state_0[11] + 0.70710677F * q_state_0[27], 0.70710677F * q_state_0[12] + 0.70710677F * q_state_0[28], 0.70710677F * q_state_0[13] + 0.70710677F * q_state_0[29], 0.70710677F * q_state_0[14] + 0.70710677F * q_state_0[30], 0.70710677F * q_state_0[15] + 0.70710677F * q_state_0[31], 0.70710677F * q_state_0[0] + -0.70710677F * q_state_0[16], 0.70710677F * q_state_0[1] + -0.70710677F * q_state_0[17], 0.70710677F * q_state_0[2] + -0.70710677F * q_state_0[18], 0.70710677F * q_state_0[3] + -0.70710677F * q_state_0[19], 0.70710677F * q_state_0[4] + -0.70710677F * q_state_0[20], 0.70710677F * q_state_0[5] + -0.70710677F * q_state_0[21], 0.70710677F * q_state_0[6] + -0.70710677F * q_state_0[22], 0.70710677F * q_state_0[7] + -0.70710677F * q_state_0[23], 0.70710677F * q_state_0[8] + -0.70710677F * q_state_0[24], 0.70710677F * q_state_0[9] + -0.70710677F * q_state_0[25], 0.70710677F * q_state_0[10] + -0.70710677F * q_state_0[26], 0.70710677F * q_state_0[11] + -0.70710677F * q_state_0[27], 0.70710677F * q_state_0[12] + -0.70710677F * q_state_0[28], 0.70710677F * q_state_0[13] + -0.70710677F * q_state_0[29], 0.70710677F * q_state_0[14] + -0.70710677F * q_state_0[30], 0.70710677F * q_state_0[15] + -0.70710677F * q_state_0[31]};
        q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
        boolean $$_tmp_measureVar7;
        if (q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
            $$_tmp_measureVar7 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar7 = false;
        }
        boolean $$_tmp_measureVar8;
        if (q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
            $$_tmp_measureVar8 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar8 = false;
        }
        boolean $$_tmp_measureVar9;
        if (q_state_0[4] * q_state_0[4] + q_state_1[4] * q_state_1[4] + q_state_0[5] * q_state_0[5] + q_state_1[5] * q_state_1[5] + q_state_0[6] * q_state_0[6] + q_state_1[6] * q_state_1[6] + q_state_0[7] * q_state_0[7] + q_state_1[7] * q_state_1[7] + q_state_0[12] * q_state_0[12] + q_state_1[12] * q_state_1[12] + q_state_0[13] * q_state_0[13] + q_state_1[13] * q_state_1[13] + q_state_0[14] * q_state_0[14] + q_state_1[14] * q_state_1[14] + q_state_0[15] * q_state_0[15] + q_state_1[15] * q_state_1[15] + q_state_0[20] * q_state_0[20] + q_state_1[20] * q_state_1[20] + q_state_0[21] * q_state_0[21] + q_state_1[21] * q_state_1[21] + q_state_0[22] * q_state_0[22] + q_state_1[22] * q_state_1[22] + q_state_0[23] * q_state_0[23] + q_state_1[23] * q_state_1[23] + q_state_0[28] * q_state_0[28] + q_state_1[28] * q_state_1[28] + q_state_0[29] * q_state_0[29] + q_state_1[29] * q_state_1[29] + q_state_0[30] * q_state_0[30] + q_state_1[30] * q_state_1[30] + q_state_0[31] * q_state_0[31] + q_state_1[31] * q_state_1[31] > q_state_0[0] * q_state_0[0] + q_state_1[0] * q_state_1[0] + q_state_0[1] * q_state_0[1] + q_state_1[1] * q_state_1[1] + q_state_0[2] * q_state_0[2] + q_state_1[2] * q_state_1[2] + q_state_0[3] * q_state_0[3] + q_state_1[3] * q_state_1[3] + q_state_0[8] * q_state_0[8] + q_state_1[8] * q_state_1[8] + q_state_0[9] * q_state_0[9] + q_state_1[9] * q_state_1[9] + q_state_0[10] * q_state_0[10] + q_state_1[10] * q_state_1[10] + q_state_0[11] * q_state_0[11] + q_state_1[11] * q_state_1[11] + q_state_0[16] * q_state_0[16] + q_state_1[16] * q_state_1[16] + q_state_0[17] * q_state_0[17] + q_state_1[17] * q_state_1[17] + q_state_0[18] * q_state_0[18] + q_state_1[18] * q_state_1[18] + q_state_0[19] * q_state_0[19] + q_state_1[19] * q_state_1[19] + q_state_0[24] * q_state_0[24] + q_state_1[24] * q_state_1[24] + q_state_0[25] * q_state_0[25] + q_state_1[25] * q_state_1[25] + q_state_0[26] * q_state_0[26] + q_state_1[26] * q_state_1[26] + q_state_0[27] * q_state_0[27] + q_state_1[27] * q_state_1[27]) {
            q_state_0 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_0[4], q_state_0[5], q_state_0[6], q_state_0[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[12], q_state_0[13], q_state_0[14], q_state_0[15], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[20], q_state_0[21], q_state_0[22], q_state_0[23], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[28], q_state_0[29], q_state_0[30], q_state_0[31]};
            q_state_1 = new float[]{0.0F, 0.0F, 0.0F, 0.0F, q_state_1[4], q_state_1[5], q_state_1[6], q_state_1[7], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[12], q_state_1[13], q_state_1[14], q_state_1[15], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[20], q_state_1[21], q_state_1[22], q_state_1[23], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[28], q_state_1[29], q_state_1[30], q_state_1[31]};
            $$_tmp_measureVar9 = true;
        } else {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], q_state_0[2], q_state_0[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[8], q_state_0[9], q_state_0[10], q_state_0[11], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[16], q_state_0[17], q_state_0[18], q_state_0[19], 0.0F, 0.0F, 0.0F, 0.0F, q_state_0[24], q_state_0[25], q_state_0[26], q_state_0[27], 0.0F, 0.0F, 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], q_state_1[2], q_state_1[3], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[8], q_state_1[9], q_state_1[10], q_state_1[11], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[16], q_state_1[17], q_state_1[18], q_state_1[19], 0.0F, 0.0F, 0.0F, 0.0F, q_state_1[24], q_state_1[25], q_state_1[26], q_state_1[27], 0.0F, 0.0F, 0.0F, 0.0F};
            $$_tmp_measureVar9 = false;
        }
        boolean $$_tmp_measureVar10;
        if ($$_tmp_measureParam0) {
            q_state_0 = new float[]{q_state_0[0], q_state_0[1], 0.0F, 0.0F, q_state_0[4], q_state_0[5], 0.0F, 0.0F, q_state_0[8], q_state_0[9], 0.0F, 0.0F, q_state_0[12], q_state_0[13], 0.0F, 0.0F, q_state_0[16], q_state_0[17], 0.0F, 0.0F, q_state_0[20], q_state_0[21], 0.0F, 0.0F, q_state_0[24], q_state_0[25], 0.0F, 0.0F, q_state_0[28], q_state_0[29], 0.0F, 0.0F};
            q_state_1 = new float[]{q_state_1[0], q_state_1[1], 0.0F, 0.0F, q_state_1[4], q_state_1[5], 0.0F, 0.0F, q_state_1[8], q_state_1[9], 0.0F, 0.0F, q_state_1[12], q_state_1[13], 0.0F, 0.0F, q_state_1[16], q_state_1[17], 0.0F, 0.0F, q_state_1[20], q_state_1[21], 0.0F, 0.0F, q_state_1[24], q_state_1[25], 0.0F, 0.0F, q_state_1[28], q_state_1[29], 0.0F, 0.0F};
            $$_tmp_measureVar10 = false;
        } else {
            q_state_0 = new float[]{0.0F, 0.0F, q_state_0[2], q_state_0[3], 0.0F, 0.0F, q_state_0[6], q_state_0[7], 0.0F, 0.0F, q_state_0[10], q_state_0[11], 0.0F, 0.0F, q_state_0[14], q_state_0[15], 0.0F, 0.0F, q_state_0[18], q_state_0[19], 0.0F, 0.0F, q_state_0[22], q_state_0[23], 0.0F, 0.0F, q_state_0[26], q_state_0[27], 0.0F, 0.0F, q_state_0[30], q_state_0[31]};
            q_state_1 = new float[]{0.0F, 0.0F, q_state_1[2], q_state_1[3], 0.0F, 0.0F, q_state_1[6], q_state_1[7], 0.0F, 0.0F, q_state_1[10], q_state_1[11], 0.0F, 0.0F, q_state_1[14], q_state_1[15], 0.0F, 0.0F, q_state_1[18], q_state_1[19], 0.0F, 0.0F, q_state_1[22], q_state_1[23], 0.0F, 0.0F, q_state_1[26], q_state_1[27], 0.0F, 0.0F, q_state_1[30], q_state_1[31]};
            $$_tmp_measureVar10 = true;
        }
        return $$_tmp_measureVar7 || $$_tmp_measureVar8 || $$_tmp_measureVar9 || $$_tmp_measureVar10;
    }

    /*@ pure */
    public static int count(/*@ non_null */
            boolean[] f) {
        int i = 0;
        for (int j = 0; j < f.length; j++) {
            if (f[j]) {
                ++i;
            }
        }
        return i;
    }
}
