[WARN ] - Unwinds is set to less than maxArraySize + 2. This may lead to unsound behaviour.
[WARN ] - Method calls in specifications only supported experimentally.
[WARN ] - "pure" annotations a currently only translated as assignable \nothing.
[INFO ] - Run jbmc for 1 functions.
[INFO ] - Result for function "BlockQuickSort.hoareBlockPartitionVerf:([IIII)I":
[INFO ] - JBMC took 7619520ms.
[INFO ] - ----------------------START TRACE---------------
Fail in line 616: Array index should be >= 0
array = [1, 1, 1, 3, 5, 0]
begin = -1
end = 3
i = -1
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 6
j = 0
last = 0
num = 0
numLeft = 0
numRight = 1
originalArray = [1, 1, 1]
originalArrayLength = 3
originalBegin = 0
originalEnd = 3
pivot = 1
pivotPosition = 2
startLeft = 0
startRight = 0
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 88: Array index should be >= 0
array = [22, 22, 6, 5, 4, 3]
begin = 0
end = 3
i = 3
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 2
j = 3
last = 0
num = 0
numLeft = 0
numRight = 1
originalArray = [6, 6, 3, 5, 4, 3]
originalArrayLength = 6
originalBegin = 0
originalEnd = 3
pivot = 6
pivotPosition = 2
startLeft = 2
startRight = 1
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 63: //@ loop_invariant startLeft < BLOCKSIZE ==> (\forall int i; originalBegin <= i < begin + indexL[startLeft]; array[i] <= pivot);
Reason assertion at file BlockQuickSort.java line 906 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2184
array = [0, 0, 3, 5, 1, 1]
begin = 2
did_run_loop = true
end = 6
i = 0
indexL = [0, 1]
indexL0 = 0
indexL1 = 1
indexR = [1, 0]
indexR0 = 1
indexR1 = 1
j = 1
last = 2
lastArray = [5, 0, 3, 0, 1, 1]
lastBegin = 0
lastIndexL = [0, 1]
lastIndexR = [1, 1]
lastLast = 4
lastNum = 0
lastNumLeft = 0
lastNumRight = 1
lastStartLeft = 0
num = 1
numLeft = 0
numRight = 0
originalArray = [5, 0, 3, 1, 0, 1]
originalArrayLength = 6
originalBegin = 0
originalEnd = 6
pivot = 1
pivotPosition = 5
i = 2
startLeft = 1
startRight = 2
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 63: //@ loop_invariant startLeft == BLOCKSIZE ==> (\forall int i; originalBegin <= i < begin; array[i] <= pivot);
Reason assertion at file BlockQuickSort.java line 907 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2204
array = [0, 6, 3, 5, 6, 4]
begin = 2
did_run_loop = true
end = 6
i = 0
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 1]
indexR0 = 1
indexR1 = 1
j = 1
last = 2
lastArray = [6, 6, 3, 5, 0, 4]
lastBegin = 0
lastIndexL = [0, 0]
lastIndexR = [1, 1]
lastLast = 4
lastNum = 0
lastNumLeft = 1
lastNumRight = 0
lastStartLeft = 1
num = 1
numLeft = 0
numRight = 0
originalArray = [3, 6, 4, 6, 5, 0]
originalArrayLength = 6
originalBegin = 0
originalEnd = 6
pivot = 4
pivotPosition = 5
i = 1
startLeft = 2
startRight = 1
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 63: //@ loop_invariant startRight < BLOCKSIZE ==> (\forall int i; last - indexR[startRight] < i < originalEnd; pivot <= array[i]);
Reason assertion at file BlockQuickSort.java line 908 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2228
array = [0, 1, 0, 1, 3, 1]
begin = 0
did_run_loop = true
end = 6
i = 0
indexL = [0, 1]
indexL0 = 0
indexL1 = 0
indexR = [1, 1]
indexR0 = 0
indexR1 = 1
j = 1
last = 2
lastArray = [1, 1, 0, 0, 3, 1]
lastBegin = 0
lastIndexL = [0, 0]
lastIndexR = [0, 1]
lastLast = 4
lastNum = 0
lastNumLeft = 0
lastNumRight = 0
lastStartLeft = 0
num = 1
numLeft = 1
numRight = 0
originalArray = [1, 1, 3, 0, 0, 1]
originalArrayLength = 6
originalBegin = 0
originalEnd = 6
pivot = 1
pivotPosition = 5
i = 2
startLeft = 1
startRight = 1
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 63: //@ loop_invariant startRight == BLOCKSIZE ==> (\forall int i; last < i < originalEnd; pivot <= array[i]);
Reason assertion at file BlockQuickSort.java line 909 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2248
array = [5, 6, 5, 4, 5, 5]
begin = 0
did_run_loop = true
end = 6
i = 0
indexL = [0, 1]
indexL0 = 0
indexL1 = 1
indexR = [0, 0]
indexR0 = 0
indexR1 = 0
j = 1
last = 2
lastArray = [5, 6, 5, 4, 5, 5]
lastBegin = 0
lastIndexL = [0, 1]
lastIndexR = [0, 0]
lastLast = 4
lastNum = 0
lastNumLeft = 0
lastNumRight = 1
lastStartLeft = 0
num = 1
numLeft = 1
numRight = 0
originalArray = [5, 4, 5, 5, 5, 6]
originalArrayLength = 6
originalBegin = 0
originalEnd = 6
pivot = 5
pivotPosition = 5
i = 3
startLeft = 1
startRight = 2
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 415: Illegal assignment to array[i] conflicting with assignables array[originalBegin .. originalEnd - 1]
Reason assertion at file BlockQuickSort.java line 1057 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2816
array = [1, 1, 1, 3, 5, 0]
last - upper = -1
array = [1, 1, 1, 3, 5, 0]
begin = -1
end = 3
i = 3
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 6
j = 0
last = 0
num = 0
numLeft = 0
numRight = 1
old22 = [1, 1, 1, 3, 5, 0]
originalArray = [1, 1, 1]
originalArrayLength = 3
originalBegin = 0
originalEnd = 3
pivot = 1
pivotPosition = 2
startLeft = 0
startRight = 0
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 18: ensures array[\result] == \old(array[pivotPosition]);
Reason assertion at file BlockQuickSort.java line 1107 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 2989
array = [2, 1, 3, 0, 3, 1]
begin = 1
end = 3
i = 2
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 2
j = 2
last = 2
num = 0
numLeft = 1
numRight = 0
old20 = 1
originalArray = [2, 3, 1, 0, 3, 1]
originalArrayLength = 6
originalBegin = 1
originalEnd = 3
pivot = 1
pivotPosition = 2
\result = 2
startLeft = 1
startRight = 0
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 21: ensures (\forall int i; originalBegin <= i <= \result; array[i] <= array[\result]);
Reason assertion at file BlockQuickSort.java line 1112 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 3010
array = [1, 0, 4, 3, 3, 5]
begin = 2
end = 6
i = 5
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 2
j = 3
last = 3
num = 0
numLeft = 1
numRight = 0
originalArray = [0, 4, 5, 1, 3, 3]
originalArrayLength = 6
originalBegin = 0
originalEnd = 6
pivot = 3
pivotPosition = 5
i = 2
\result = 3
startLeft = 0
startRight = 0
-----------------END TRACE-------------------

----------------------START TRACE---------------
Fail in line 23: ensures (\forall int i; \result <= i < originalEnd; array[\result] <= array[i]);
Reason assertion at file BlockQuickSort.java line 1117 function java::BlockQuickSort.hoareBlockPartitionVerf:([IIII)I bytecode-index 3031
array = [0, 4, 4, 0, 8192, 0]
begin = 0
end = 4
i = 3
indexL = [0, 0]
indexL0 = 0
indexL1 = 0
indexR = [0, 0]
indexR0 = 0
indexR1 = 2
j = 1
last = 1
num = 0
numLeft = 0
numRight = 1
originalArray = [4, 4, 0, 0]
originalArrayLength = 4
originalBegin = 0
originalEnd = 4
pivot = 4
pivotPosition = 3
i = 3
\result = 1
startLeft = 0
startRight = 0
-----------------END TRACE-------------------


[INFO ] - FAILURE