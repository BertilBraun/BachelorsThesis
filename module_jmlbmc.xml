<?xml version="1.0" encoding="UTF-8"?>
<project name="module_jmlbmc" default="compile.module.jmlbmc">
  <dirname property="module.jmlbmc.basedir" file="${ant.file.module_jmlbmc}"/>
  
  <property name="compiler.args.jmlbmc" value="-encoding UTF-8 -source 8 -target 8 ${compiler.args}"/>
  
  <property name="jmlbmc.output.dir" value="${module.jmlbmc.basedir}/out/production/jmlbmc"/>
  <property name="jmlbmc.testoutput.dir" value="${module.jmlbmc.basedir}/out/test/jmlbmc"/>
  
  <path id="jmlbmc.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jmlbmc.module.production.classpath">
    <pathelement location="${basedir}/openjml.jar"/>
    <pathelement location="${basedir}/jmlruntime.jar"/>
    <pathelement location="${basedir}/jmlspecs.jar"/>
    <path refid="library.jmlruntime.classpath"/>
    <path refid="library.picocli-3.9.1.classpath"/>
  </path>
  
  <path id="jmlbmc.runtime.production.module.classpath">
    <pathelement location="${jmlbmc.output.dir}"/>
    <pathelement location="${basedir}/openjml.jar"/>
    <pathelement location="${basedir}/jmlruntime.jar"/>
    <pathelement location="${basedir}/jmlspecs.jar"/>
    <path refid="library.jmlruntime.classpath"/>
    <path refid="library.picocli-3.9.1.classpath"/>
  </path>
  
  <path id="jmlbmc.module.classpath">
    <pathelement location="${jmlbmc.output.dir}"/>
    <pathelement location="${basedir}/openjml.jar"/>
    <pathelement location="${basedir}/jmlruntime.jar"/>
    <pathelement location="${basedir}/jmlspecs.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.12.jar"/>
    <path refid="library.jmlruntime.classpath"/>
    <path refid="library.picocli-3.9.1.classpath"/>
  </path>
  
  <path id="jmlbmc.runtime.module.classpath">
    <pathelement location="${jmlbmc.testoutput.dir}"/>
    <pathelement location="${jmlbmc.output.dir}"/>
    <pathelement location="${basedir}/openjml.jar"/>
    <pathelement location="${basedir}/jmlruntime.jar"/>
    <pathelement location="${basedir}/jmlspecs.jar"/>
    <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
    <pathelement location="${basedir}/lib/junit-4.12.jar"/>
    <path refid="library.jmlruntime.classpath"/>
    <path refid="library.picocli-3.9.1.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.jmlbmc">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jmlbmc">
    <patternset refid="excluded.from.module.jmlbmc"/>
  </patternset>
  
  <path id="jmlbmc.module.sourcepath">
    <dirset dir="${module.jmlbmc.basedir}">
      <include name="src"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  <path id="jmlbmc.module.test.sourcepath">
    <dirset dir="${module.jmlbmc.basedir}">
      <include name="tests"/>
      <include name="testRes"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jmlbmc" depends="compile.module.jmlbmc.production" description="Compile module jmlbmc"/>
  
  <target name="compile.module.jmlbmc.production" description="Compile module jmlbmc; production classes">
    <mkdir dir="${jmlbmc.output.dir}"/>
    <javac destdir="${jmlbmc.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="javac">
      <compilerarg line="${compiler.args.jmlbmc}"/>
      <bootclasspath refid="jmlbmc.module.bootclasspath"/>
      <classpath refid="jmlbmc.module.production.classpath"/>
      <src refid="jmlbmc.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jmlbmc"/>
    </javac>
    
    <copy todir="${jmlbmc.output.dir}">
      <fileset dir="${module.jmlbmc.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jmlbmc.basedir}/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.jmlbmc" description="cleanup module">
    <delete dir="${jmlbmc.output.dir}"/>
    <delete dir="${jmlbmc.testoutput.dir}"/>
  </target>
</project>
